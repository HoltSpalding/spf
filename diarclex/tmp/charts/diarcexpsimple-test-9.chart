[0-0 : quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-1438514282 : 3 : 20.0 : [*[0-0 :: lex :: quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 20.0}, *[0-0 :: lex :: quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)} -> 20.0}, *[0-0 :: lex :: quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)} -> 20.0}]]
[0-0 : quickly :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-1438512887 : 3 : 20.0 : [*[0-0 :: lex :: quickly :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#39#79=10.000(1.000),FACLEX#TMP#79=0.000(0.100),FACLEX#XEME#39=10.000(1.000)} -> 20.0}, *[0-0 :: lex :: quickly :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#32#26=10.000(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 20.0}, *[0-0 :: lex :: quickly :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#65#90=10.000(1.000),FACLEX#TMP#90=0.000(0.100),FACLEX#XEME#65=10.000(1.000)} -> 20.0}]]
[0-0 : quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-713336098 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#39#28=0.000(1.000),FACLEX#TMP#28=0.000(0.100),FACLEX#XEME#39=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-639550044 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#32#29=0.0(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-585650267 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#32#39=0.000(1.000),FACLEX#TMP#39=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (quickly:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-433298212 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (quickly:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#32#6=0.0(1.000),FACLEX#TMP#6=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-361203992 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#32#30=0.0(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (manner:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-50033057 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (manner:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#39#34=0.0(1.000),FACLEX#TMP#34=0.000(0.100),FACLEX#XEME#39=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (quickly:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=864748809 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (quickly:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#32#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (quickly:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=936843029 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (quickly:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#32#51=0.0(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#32=10.000(1.000)} -> 10.0}]]
[0-0 : quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (manner:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1252929050 : 1 : 10.0 : [*[0-0 :: lex :: quickly :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (manner:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#39#68=0.0(1.000),FACLEX#TMP#68=0.000(0.100),FACLEX#XEME#39=10.000(1.000)} -> 10.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=51.43546925072586 : numParses=33 : numViterbiParses=33 : hash=1950009247 : 1 : 51.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -473242784]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=51.43546925072586 : numParses=33 : numViterbiParses=33 : hash=2022103467 : 1 : 51.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -401148564]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=-277242663 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: 1252929050, -473242784]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=-205148443 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: 1252929050, -401148564]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=90939955 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -713336098, -473242784]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=163034175 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -713336098, -401148564]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1481401943 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -639550044, -473242784]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e ($0 $5)))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1553496163 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -639550044, -401148564]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (manner:<a,<<a,t>,t>> $1 (lambda $3:a (pickup:<a,t> $3))) ($0 $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1914161854 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -2136371259]{{} -> 0.0}]]
[0-2 : quickly pick up :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) (manner:<a,<<a,t>,t>> $1 (lambda $3:a (quickly:<a,t> $3))) ($0 $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1914160459 : 1 : 30.0 : [*[0-2 :: <comp1 :: 0-0, 1-2 :: -1438512887, -2136369864]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1145234917 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, 785420516]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1098484217 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1279979064]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=18 : numViterbiParses=18 : hash=-1085462753 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, 1953701708]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1073140697 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, 857514736]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1026389997 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1207884844]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=18 : numViterbiParses=18 : hash=-1013368533 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, 2025795928]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=9 : numViterbiParses=9 : hash=-798022493 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1327099168]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=9 : numViterbiParses=9 : hash=-725928273 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1255004948]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=109499939 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1357049016]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (obj:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=181594159 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1284954796]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=825545891 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -488009272]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=897640111 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -415915052]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=2049546399 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1171710384]{{} -> 0.0}]]
[0-2 : quickly pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e ($0 $4)))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=2121640619 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-0, 1-2 :: -1438514282, -1099616164]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) ($0 $4))))))) : prune=71.43546925072586 : numParses=132 : numViterbiParses=66 : hash=-163576462 : 3 : 71.43546925072586 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 2022103467, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 1950009247, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 1659048053]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) ($0 $4))))))) : prune=61.43546925072586 : numParses=66 : numViterbiParses=66 : hash=-235670682 : 2 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 2022103467, -1758832160]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 1586953833]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=61.43546925072586 : numParses=44 : numViterbiParses=22 : hash=728145574 : 3 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: 1252929050, 1659048053]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: -277242663, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -205148443, -1686737940]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=61.43546925072586 : numParses=44 : numViterbiParses=22 : hash=1031305316 : 3 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: -639550044, 1659048053]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1553496163, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 1481401943, 373308536]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=61.43546925072586 : numParses=44 : numViterbiParses=22 : hash=1550229520 : 3 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 163034175, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 90939955, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -713336098, 1659048053]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (def:<e,t> $3))))) : prune=61.43546925072586 : numParses=33 : numViterbiParses=33 : hash=1612269955 : 1 : 61.43546925072586 : [*[0-3 :: >apply :: 0-0, 1-3 :: -1438514282, 1805239620]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=51.43546925072586 : numParses=22 : numViterbiParses=22 : hash=656051354 : 2 : 51.43546925072586 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: 1252929050, 1586953833]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -205148443, -1758832160]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (before:<a,t> $1) (conjobj:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (def:<e,t> $4)))))) (manner:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=51.43546925072586 : numParses=11 : numViterbiParses=11 : hash=754176020 : 1 : 51.43546925072586 : [*[0-3 :: >apply :: 0-0, 1-3 :: 1252929050, 1805239620]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=51.43546925072586 : numParses=22 : numViterbiParses=22 : hash=959211096 : 2 : 51.43546925072586 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: -639550044, 1586953833]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1553496163, -1758832160]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (quickly:<a,t> $1) (conjobj:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (def:<e,t> $4)))))) (conjsubj:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=51.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1014775766 : 1 : 51.43546925072586 : [*[0-3 :: >apply :: 0-0, 1-3 :: -639550044, 1805239620]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (before:<a,t> $1) (manner:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (def:<e,t> $4)))))) (conjsubj:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=51.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1288492154 : 1 : 51.43546925072586 : [*[0-3 :: >apply :: 0-0, 1-3 :: -713336098, 1805239620]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=51.43546925072586 : numParses=22 : numViterbiParses=22 : hash=1478135300 : 2 : 51.43546925072586 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: -713336098, 1586953833]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 163034175, -1758832160]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=36 : numViterbiParses=18 : hash=-2047195662 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -725928273, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: -798022493, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 692588661]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4))))))) : prune=50.0 : numParses=9 : numViterbiParses=6 : hash=-379051198 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 2121640619, -1686737940]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 235797957]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 2049546399, 373308536]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4))))))) : prune=50.0 : numParses=54 : numViterbiParses=36 : hash=497998902 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -1013368533, -1686737940]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 1998687713]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: -1085462753, 373308536]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4))))))) : prune=50.0 : numParses=12 : numViterbiParses=6 : hash=752016954 : 3 : 50.0 : [[0-3 :: >comp1 :: 0-2, 3-3 :: -1098484217, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, 119532485]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -1026389997, -1686737940]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=18 : numViterbiParses=12 : hash=991590138 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 181594159, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 109499939, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, -1078948235]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) ($0 $4)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=12 : numViterbiParses=6 : hash=1200781678 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, -613982599]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -1073140697, -1686737940]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: -1145234917, 373308536]{{} -> 0.0}]]
[0-3 : quickly pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> ($0 $4) (def:<e,t> $4))))))) : prune=50.0 : numParses=12 : numViterbiParses=6 : hash=1946445882 : 3 : 50.0 : [*[0-3 :: >comp1 :: 0-0, 1-3 :: -1438514282, -1068880443]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 825545891, 373308536]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 897640111, -1686737940]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4) ($0 $4))))))) : prune=91.43546925072586 : numParses=330 : numViterbiParses=165 : hash=1478132583 : 4 : 91.43546925072586 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: -163576462, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1950009247, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, -149220638]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 2022103467, 497222029]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) (mod:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=81.43546925072586 : numParses=110 : numViterbiParses=55 : hash=-572193483 : 4 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-0, 1-4 :: -713336098, -149220638]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 163034175, 497222029]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1550229520, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 90939955, -1737698791]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) (mod:<e,t> $5) ($0 $5))))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=81.43546925072586 : numParses=110 : numViterbiParses=55 : hash=920763611 : 4 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -205148443, 497222029]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: -277242663, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 728145574, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: 1252929050, -149220638]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) ($0 $4) (mod:<e,t> $4))))))) : prune=81.43546925072586 : numParses=495 : numViterbiParses=330 : hash=1550226803 : 5 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: -235670682, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 2022103467, 569316249]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, -77126418]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -163576462, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1950009247, -1665604571]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) (mod:<e,t> $5) ($0 $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=81.43546925072586 : numParses=110 : numViterbiParses=55 : hash=1747551577 : 4 : 81.43546925072586 : [[0-4 :: >comp1 :: 0-2, 3-4 :: 1481401943, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -639550044, -149220638]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1031305316, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1553496163, 497222029]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3)))))) : prune=71.43546925072586 : numParses=33 : numViterbiParses=33 : hash=-1609479170 : 1 : 71.43546925072586 : [*[0-4 :: >apply :: 0-0, 1-4 :: -1438514282, 433199325]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (manner:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5) (mod:<e,t> $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=71.43546925072586 : numParses=165 : numViterbiParses=110 : hash=-500099263 : 5 : 71.43546925072586 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: 1478135300, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 90939955, -1665604571]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1550229520, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 163034175, 569316249]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -713336098, -77126418]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (before:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5) (mod:<e,t> $5))))))) (manner:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=71.43546925072586 : numParses=165 : numViterbiParses=110 : hash=992857831 : 5 : 71.43546925072586 : [*[0-4 :: >comp1 :: 0-0, 1-4 :: 1252929050, -77126418]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 656051354, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: -277242663, -1665604571]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -205148443, 569316249]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 728145574, -927502170]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (quickly:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a (and:<t*,t> (actor:<a,<<e,t>,t>> $3 (lambda $4:e (self:<e,t> $4))) (pickup:<a,t> $3) (obj:<a,<<e,t>,t>> $3 (lambda $5:e (and:<t*,t> (def:<e,t> $5) ($0 $5) (mod:<e,t> $5))))))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $6:a ($1 $6))))))) : prune=71.43546925072586 : numParses=165 : numViterbiParses=110 : hash=1819645797 : 5 : 71.43546925072586 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 1553496163, 569316249]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1031305316, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1481401943, -1665604571]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -639550044, -77126418]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 959211096, 1132544306]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4) ($0 $4)))) (pickup:<a,t> $1)))) : prune=70.0 : numParses=30 : numViterbiParses=15 : hash=-975382813 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: 1200781678, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -1073140697, 497222029]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, 1080541542]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: -1145234917, -1737698791]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (mod:<e,t> $4) ($0 $4) (def:<e,t> $4))))))) : prune=70.0 : numParses=126 : numViterbiParses=90 : hash=-793002077 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, -2083999946]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 497998902, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -1013368533, 497222029]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: -1085462753, -1737698791]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (mod:<e,t> $4) ($0 $4) (def:<e,t> $4)))) (pickup:<a,t> $1)))) : prune=70.0 : numParses=90 : numViterbiParses=45 : hash=-431225881 : 4 : 70.0 : [[0-4 :: >comp1 :: 0-2, 3-4 :: -798022493, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, 2074321762]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -725928273, 497222029]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -2047195662, -999596390]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (mod:<e,t> $4) ($0 $4) (def:<e,t> $4))))))) : prune=70.0 : numParses=30 : numViterbiParses=15 : hash=-231796313 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -1026389997, 497222029]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, 353285034]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: -1098484217, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 752016954, -999596390]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (obj:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4) ($0 $4)))) (pickup:<a,t> $1)))) : prune=70.0 : numParses=48 : numViterbiParses=30 : hash=431747943 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: 991590138, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 109499939, -1737698791]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, -395479638]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 181594159, 497222029]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (mod:<e,t> $4) ($0 $4) (def:<e,t> $4))))))) : prune=70.0 : numParses=21 : numViterbiParses=15 : hash=501038375 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, 245215794]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -379051198, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 2121640619, 497222029]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 2049546399, -1737698791]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (self:<e,t> $3))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $4:e (and:<t*,t> (mod:<e,t> $4) ($0 $4) (def:<e,t> $4))))))) : prune=70.0 : numParses=30 : numViterbiParses=15 : hash=1547217959 : 4 : 70.0 : [*[0-4 :: >comp1 :: 0-0, 1-4 :: -1438514282, 1416635818]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 897640111, 497222029]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1946445882, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 825545891, -1737698791]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (quickly:<a,t> $1) (conjobj:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4))))))) (conjsubj:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=61.43546925072586 : numParses=11 : numViterbiParses=11 : hash=-437399913 : 1 : 61.43546925072586 : [*[0-4 :: >apply :: 0-0, 1-4 :: -639550044, 433199325]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (before:<a,t> $1) (conjobj:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4))))))) (manner:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=61.43546925072586 : numParses=11 : numViterbiParses=11 : hash=-102934315 : 1 : 61.43546925072586 : [*[0-4 :: >apply :: 0-0, 1-4 :: 1252929050, 433199325]{{} -> 0.0}]]
[0-4 : quickly pick up the mod :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (before:<a,t> $1) (manner:<a,<<a,t>,t>> $1 (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (self:<e,t> $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e (and:<t*,t> (def:<e,t> $4) (mod:<e,t> $4))))))) (conjsubj:<a,<<a,t>,t>> $1 (lambda $5:a ($0 $5)))))) : prune=61.43546925072586 : numParses=11 : numViterbiParses=11 : hash=950966699 : 1 : 61.43546925072586 : [*[0-4 :: >apply :: 0-0, 1-4 :: -713336098, 433199325]{{} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3)))))) : prune=111.43546925072586 : numParses=66 : numViterbiParses=33 : hash=-143533313 : 1 : 111.43546925072586 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, 849383422]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3)))) (pickup:<a,t> $0))) : prune=90.0 : numParses=12 : numViterbiParses=6 : hash=-1327392633 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, -1734569602]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))))) : prune=90.0 : numParses=18 : numViterbiParses=18 : hash=-787260101 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, 544634354]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))))) : prune=90.0 : numParses=6 : numViterbiParses=3 : hash=731908791 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, -905505922]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))))) : prune=90.0 : numParses=3 : numViterbiParses=3 : hash=830241471 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, -374910850]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))))) : prune=90.0 : numParses=6 : numViterbiParses=3 : hash=882196663 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, 83480958]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))) (pickup:<a,t> $0))) : prune=90.0 : numParses=18 : numViterbiParses=9 : hash=887196799 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, -28917378]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3)))) (pickup:<a,t> $0))) : prune=90.0 : numParses=6 : numViterbiParses=3 : hash=1266973315 : 1 : 90.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: -1438514282, 1363440506]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : quickly pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2) (self:<e,t> $2)))) (quickly:<a,t> $0))) : prune=80.0 : numParses=3 : numViterbiParses=2 : hash=22811693 : 2 : 80.0 : [*[0-5 :: >apply :: 0-0, 1-5 :: 936843029, 1436082941]{{LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)} -> 0.0}, *[0-5 :: >apply :: 0-0, 1-5 :: 864748809, 1433757321]{{LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)} -> 0.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=31.435469250725863 : numParses=7 : numViterbiParses=7 : hash=-1116782973 : 7 : 31.435469250725863 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#6=21.435(1.000),FACLEX#TMP#6=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#63=21.435(1.000),FACLEX#TMP#63=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#50=21.435(1.000),FACLEX#TMP#50=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#5=21.435(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#41#55=21.435(1.000),FACLEX#TMP#55=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#46#69=21.435(1.000),FACLEX#TMP#69=0.000(0.100),FACLEX#XEME#46=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#56=21.435(1.000),FACLEX#TMP#56=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 31.435469250725863}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=31.435469250725863 : numParses=7 : numViterbiParses=7 : hash=-1044688753 : 7 : 31.435469250725863 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#38=21.435(1.000),FACLEX#TMP#38=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#46#54=21.435(1.000),FACLEX#TMP#54=0.000(0.100),FACLEX#XEME#46=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#41#20=21.435(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#30=21.435(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#15=21.435(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#17=21.435(1.000),FACLEX#TMP#17=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#9=21.435(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=31.435469250725863 : numParses=11 : numViterbiParses=11 : hash=-473242784 : 11 : 31.435469250725863 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#10#43=21.435(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#25#75=21.435(1.000),FACLEX#TMP#75=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#7#33=21.435(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#64=21.435(1.000),FACLEX#TMP#64=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#62=21.435(1.000),FACLEX#TMP#62=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#19=21.435(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#18=21.435(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#40#67=21.435(1.000),FACLEX#TMP#67=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#35#35=21.435(1.000),FACLEX#TMP#35=0.000(0.100),FACLEX#XEME#35=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#11=21.435(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#43#57=21.435(1.000),FACLEX#TMP#57=0.000(0.100),FACLEX#XEME#43=10.000(1.000)} -> 31.435469250725863}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=31.435469250725863 : numParses=11 : numViterbiParses=11 : hash=-401148564 : 11 : 31.435469250725863 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#40#7=21.435(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#12=21.435(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#35#41=21.435(1.000),FACLEX#TMP#41=0.000(0.100),FACLEX#XEME#35=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#60=21.435(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#10#8=21.435(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#7#51=21.435(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#25#73=21.435(1.000),FACLEX#TMP#73=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#43#49=21.435(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#43=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#32=21.435(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#22=21.435(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 31.435469250725863}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#47=21.435(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}]]
[1-2 : pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2136371259 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2136369864 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#7#26=0.000(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- N : (lambda $0:e (self:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1876228438 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- N : (lambda $0:e (self:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#14#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1814970941 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#24=0.0(1.000),FACLEX#TMP#24=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1742876721 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1411493433 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#78=0.0(1.000),FACLEX#TMP#78=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1411493433 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#24=0.000(1.000),FACLEX#TMP#24=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#27=0.0(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#78=0.0(1.000),FACLEX#TMP#78=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-1357049016 : 2 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#19=0.0(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#64=0.0(1.000),FACLEX#TMP#64=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1339399213 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#31=0.0(1.000),FACLEX#TMP#31=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1339399213 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#44=0.0(1.000),FACLEX#TMP#44=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#31=0.0(1.000),FACLEX#TMP#31=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1327099168 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#11=0.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#36#65=0.0(1.000),FACLEX#TMP#65=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#62=0.0(1.000),FACLEX#TMP#62=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-1284954796 : 2 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#32=0.000(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1279979064 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1255004948 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#60=0.0(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#36#66=0.0(1.000),FACLEX#TMP#66=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#47=0.0(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1207884844 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#61=0.000(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1171710384 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#45=0.0(1.000),FACLEX#TMP#45=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1116782973 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#50=0.0(1.000),FACLEX#TMP#50=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1099616164 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#37=0.000(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1044688753 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#17=0.0(1.000),FACLEX#TMP#17=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-843076870 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-775600255 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#4=0.0(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-770982650 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-751146362 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#70=0.0(1.000),FACLEX#TMP#70=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-488009272 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#21#59=0.0(1.000),FACLEX#TMP#59=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-415915052 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#21#36=0.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=344478596 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#39=0.0(1.000),FACLEX#TMP#39=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=785420516 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#21#43=0.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=857514736 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#21#8=0.0(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=1054396163 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#12#55=0.0(1.000),FACLEX#TMP#55=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#0=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#5=0.000(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1094324510 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#2=0.0(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=1126490383 : 3 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#12#20=0.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#80=0.0(1.000),FACLEX#TMP#80=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1297257827 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1387226345 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1459320565 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1481331742 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#2=0.0(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1491390599 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#63=0.0(1.000),FACLEX#TMP#63=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1563484819 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1795938303 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1868032523 : 1 : 10.0 : [*[1-2 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#44=0.0(1.000),FACLEX#TMP#44=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=6 : numViterbiParses=6 : hash=1953701708 : 6 : 10.0 : [*[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#14#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#25#71=0.0(1.000),FACLEX#TMP#71=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#10#59=0.0(1.000),FACLEX#TMP#59=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#40#76=0.000(1.000),FACLEX#TMP#76=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#45=0.0(1.000),FACLEX#TMP#45=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[1-2 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=6 : numViterbiParses=6 : hash=2025795928 : 6 : 10.0 : [*[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#10#36=0.0(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#25#23=0.000(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#61=0.0(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#40#48=0.000(1.000),FACLEX#TMP#48=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 10.0}, *[1-2 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#14#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3))))))) : prune=51.43546925072586 : numParses=22 : numViterbiParses=11 : hash=1659048053 : 2 : 51.43546925072586 : [[1-3 :: >comp1 :: 1-2, 3-3 :: -473242784, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: -401148564, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=51.43546925072586 : numParses=14 : numViterbiParses=7 : hash=1978921102 : 2 : 51.43546925072586 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1044688753, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: -1116782973, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=41.43546925072586 : numParses=7 : numViterbiParses=7 : hash=985718970 : 1 : 41.43546925072586 : [*[1-3 :: >apply :: 1-2, 3-3 :: -1116782973, 1365023124]{{} -> 0.0}]]
[1-3 : pick up the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1586953833 : 1 : 41.43546925072586 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -401148564, -1758832160]{{} -> 0.0}]]
[1-3 : pick up the :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1805239620 : 1 : 41.43546925072586 : [*[1-3 :: >apply :: 1-2, 3-3 :: -473242784, 1365023124]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=41.43546925072586 : numParses=7 : numViterbiParses=7 : hash=1906826882 : 1 : 41.43546925072586 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1044688753, -1758832160]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-1078948235 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1284954796, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-1068880443 : 2 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -415915052, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: -488009272, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-924847986 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: -1814970941, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: -1742876721, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-857382158 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 1126490383, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-623326713 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 344478596, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-613982599 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: 785420516, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: 857514736, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1) (self:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-607360794 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: 1387226345, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: 1459320565, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-326610043 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -751146362, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=119532485 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: -1279979064, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: -1207884844, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=123519483 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 1481331742, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=235797957 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1099616164, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=6 : numViterbiParses=3 : hash=256511758 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: -1411493433, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: -1339399213, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=429392014 : 2 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1339399213, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: -1411493433, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=6 : numViterbiParses=3 : hash=692588661 : 2 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -1255004948, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: -1327099168, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1204264462 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: 1491390599, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: 1563484819, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1393434382 : 2 : 30.0 : [[1-3 :: >comp1 :: 1-2, 3-3 :: -1116782973, 373308536]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-2, 3-3 :: -1044688753, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1452685682 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -775600255, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1457303287 : 2 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: -770982650, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: -843076870, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1556243338 : 2 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 1868032523, -1686737940]{{} -> 0.0}, [1-3 :: >comp1 :: 1-2, 3-3 :: 1795938303, 373308536]{{} -> 0.0}]]
[1-3 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1709525363 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 1094324510, -1686737940]{{} -> 0.0}]]
[1-3 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=1998687713 : 1 : 30.0 : [*[1-3 :: >comp1 :: 1-2, 3-3 :: 2025795928, -1686737940]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3))))))) : prune=71.43546925072586 : numParses=44 : numViterbiParses=22 : hash=-149220638 : 3 : 71.43546925072586 : [[1-4 :: >comp1 :: 1-2, 3-4 :: -473242784, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1659048053, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -401148564, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=71.43546925072586 : numParses=28 : numViterbiParses=14 : hash=751198315 : 3 : 71.43546925072586 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 1978921102, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1116782973, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1044688753, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=61.43546925072586 : numParses=66 : numViterbiParses=44 : hash=-77126418 : 4 : 61.43546925072586 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 1659048053, -927502170]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -401148564, 569316249]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -473242784, -1665604571]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1586953833, 1132544306]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=61.43546925072586 : numParses=42 : numViterbiParses=28 : hash=823292535 : 4 : 61.43546925072586 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 1906826882, 1132544306]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1044688753, 569316249]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1978921102, -927502170]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1116782973, -1665604571]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2)))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=51.43546925072586 : numParses=7 : numViterbiParses=7 : hash=-1715073171 : 1 : 51.43546925072586 : [*[1-4 :: >apply :: 1-2, 3-4 :: -1044688753, -440023764]{{} -> 0.0}]]
[1-4 : pick up the mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2)))))) : prune=51.43546925072586 : numParses=11 : numViterbiParses=11 : hash=433199325 : 1 : 51.43546925072586 : [*[1-4 :: >apply :: 1-2, 3-4 :: -401148564, -440023764]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=50.0 : numParses=12 : numViterbiParses=12 : hash=-2083999946 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: 2025795928, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1998687713, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=-1980145557 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 1204264462, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 1563484819, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: 1491390599, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=-933094526 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -751146362, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: -326610043, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=-713747816 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: 1481331742, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 123519483, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (mod:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=-704535339 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -775600255, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1452685682, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (mod:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=-699917734 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -770982650, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1457303287, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -843076870, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=4 : hash=-395479638 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -1284954796, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: -1078948235, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1357049016, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=9 : numViterbiParses=6 : hash=38363367 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: -857382158, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: 1054396163, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 1126490383, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=245215794 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -1099616164, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 235797957, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=353285034 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 119532485, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1207884844, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1279979064, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=639260796 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: -623326713, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 344478596, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=50.0 : numParses=2 : numViterbiParses=2 : hash=648083856 : 2 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 1709525363, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 1094324510, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=719010987 : 3 : 50.0 : [[1-4 :: >comp1 :: 1-2, 3-4 :: -1814970941, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1742876721, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: -924847986, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=748306347 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 429392014, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1339399213, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1411493433, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=801079147 : 3 : 50.0 : [[1-4 :: >comp1 :: 1-2, 3-4 :: -1116782973, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1393434382, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1044688753, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=1080541542 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: -613982599, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 857514736, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: 785420516, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=1416635818 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -415915052, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: -1068880443, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -488009272, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=1421095231 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: 1868032523, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: 1795938303, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 1556243338, -999596390]{{} -> 0.0}]]
[1-4 : pick up the mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (def:<e,t> $1) (self:<e,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=1530385481 : 3 : 50.0 : [[1-4 :: >comp1 :: 1-2, 3-4 :: 1387226345, -1737698791]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: -607360794, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: 1459320565, 497222029]{{} -> 0.0}]]
[1-4 : pick up the mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=50.0 : numParses=12 : numViterbiParses=6 : hash=1563074219 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-2, 3-4 :: -1339399213, 497222029]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-3, 4-4 :: 256511758, -999596390]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1411493433, -1737698791]{{} -> 0.0}]]
[1-4 : pick up the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=12 : numViterbiParses=6 : hash=2074321762 : 3 : 50.0 : [*[1-4 :: >comp1 :: 1-3, 4-4 :: 692588661, -999596390]{{} -> 0.0}, *[1-4 :: >comp1 :: 1-2, 3-4 :: -1255004948, 497222029]{{} -> 0.0}, [1-4 :: >comp1 :: 1-2, 3-4 :: -1327099168, -1737698791]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=91.43546925072586 : numParses=14 : numViterbiParses=7 : hash=-945142578 : 2 : 91.43546925072586 : [[1-5 :: >apply :: 1-2, 3-5 :: -1116782973, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -1044688753, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))))) : prune=91.43546925072586 : numParses=22 : numViterbiParses=11 : hash=849383422 : 2 : 91.43546925072586 : [[1-5 :: >apply :: 1-2, 3-5 :: -473242784, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -401148564, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (obj:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=81.43546925072586 : numParses=175 : numViterbiParses=35 : hash=-242451848 : 6 : 81.43546925072586 : [[1-5 :: >comp1 :: 1-2, 3-5 :: -1116782973, 2085019814]{{} -> 0.0}, [1-5 :: >comp1 :: 1-3, 4-5 :: 1906826882, 1564704483]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-4, 5-5 :: 751198315, -898443296]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-2, 3-5 :: -1044688753, 24973338]{{} -> 0.0}, [1-5 :: >comp1 :: 1-4, 5-5 :: 823292535, 1336477524]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-3, 4-5 :: 1978921102, -495341993]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3))))))) : prune=81.43546925072586 : numParses=275 : numViterbiParses=55 : hash=1988107503 : 6 : 81.43546925072586 : [*[1-5 :: >comp1 :: 1-3, 4-5 :: 1659048053, -495341993]{{} -> 0.0}, [1-5 :: >comp1 :: 1-2, 3-5 :: -473242784, 2085019814]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-4, 5-5 :: -149220638, -898443296]{{} -> 0.0}, [1-5 :: >comp1 :: 1-3, 4-5 :: 1586953833, 1564704483]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-2, 3-5 :: -401148564, 24973338]{{} -> 0.0}, [1-5 :: >comp1 :: 1-4, 5-5 :: -77126418, 1336477524]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=71.43546925072586 : numParses=105 : numViterbiParses=70 : hash=-314546068 : 5 : 71.43546925072586 : [*[1-5 :: >comp1 :: 1-2, 3-5 :: -1044688753, -47120882]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-3, 4-5 :: 1978921102, -567436213]{{} -> 0.0}, [1-5 :: >comp1 :: 1-2, 3-5 :: -1116782973, 2012925594]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-3, 4-5 :: 1906826882, 1492610263]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-4, 5-5 :: 823292535, 1264383304]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=71.43546925072586 : numParses=165 : numViterbiParses=110 : hash=1916013283 : 5 : 71.43546925072586 : [*[1-5 :: >comp1 :: 1-3, 4-5 :: 1586953833, 1492610263]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-3, 4-5 :: 1659048053, -567436213]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-2, 3-5 :: -401148564, -47120882]{{} -> 0.0}, *[1-5 :: >comp1 :: 1-4, 5-5 :: -77126418, 1264383304]{{} -> 0.0}, [1-5 :: >comp1 :: 1-2, 3-5 :: -473242784, 2012925594]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0))) : prune=70.0 : numParses=4 : numViterbiParses=2 : hash=-1734569602 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -1357049016, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -1284954796, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (by:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (prepsubj:<a,<<a,t>,t>> $1 (lambda $3:a ($0 $3)))))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=-1451648933 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 1094324510, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (prepsubj:<a,<<a,t>,t>> $1 (lambda $3:a ($0 $3)))))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=-1369360775 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -751146362, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=-905505922 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -1279979064, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -1207884844, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=-752277886 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 1868032523, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: 1795938303, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=-374910850 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -1099616164, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (pickup:<a,t> $0))) : prune=70.0 : numParses=6 : numViterbiParses=3 : hash=-28917378 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -1327099168, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -1255004948, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=83480958 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -488009272, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -415915052, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (by:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (prepsubj:<a,<<a,t>,t>> $1 (lambda $3:a ($0 $3)))))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=99520867 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 1481331742, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=6 : numViterbiParses=3 : hash=132578266 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: 1054396163, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: 1126490383, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=6 : numViterbiParses=3 : hash=353786110 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -1339399213, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: -1411493433, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=534554366 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -1814970941, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -1742876721, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))))) : prune=70.0 : numParses=6 : numViterbiParses=6 : hash=544634354 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 2025795928, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1115497294 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -1044688753, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: -1116782973, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1363440506 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 857514736, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: 785420516, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1424045950 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -1339399213, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: -1411493433, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- N : (lambda $0:e (and:<t*,t> (self:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0) (def:<e,t> $0))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=1433757321 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: -775600255, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S : (lambda $0:e (and:<t*,t> (self:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0) (def:<e,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1433762126 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: -843076870, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: -770982650, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- NP : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (obj:<e,t> $0) (def:<e,t> $0) (self:<e,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1436082941 : 2 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 1459320565, -612369731]{{} -> 0.0}, [1-5 :: >apply :: 1-2, 3-5 :: 1387226345, -614695351]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (pickup:<a,t> $1) (prepobj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2)))) (prepsubj:<a,<<a,t>,t>> $1 (lambda $3:a ($0 $3)))))) : prune=70.0 : numParses=1 : numViterbiParses=1 : hash=1656355431 : 1 : 70.0 : [*[1-5 :: >apply :: 1-2, 3-5 :: 344478596, -612369731]{{} -> 0.0}]]
[1-5 : pick up the mod obj :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=1770722638 : 2 : 70.0 : [[1-5 :: >apply :: 1-2, 3-5 :: 1491390599, -614695351]{{} -> 0.0}, *[1-5 :: >apply :: 1-2, 3-5 :: 1563484819, -612369731]{{} -> 0.0}]]
[3-3 : the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1686737940 : 1 : 20.0 : [*[3-3 :: lex :: the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[3-3 : the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=305831921 : 1 : 20.0 : [*[3-3 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[3-3 : the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=377926141 : 1 : 20.0 : [*[3-3 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[3-3 : the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1758832160 : 1 : 10.0 : [*[3-3 :: lex :: the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1192057403 : 1 : 10.0 : [*[3-3 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#24#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1119963183 : 1 : 10.0 : [*[3-3 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#24#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=373308536 : 1 : 10.0 : [*[3-3 :: lex :: the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#4=0.0(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=473363401 : 1 : 10.0 : [*[3-3 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=545457621 : 1 : 10.0 : [*[3-3 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-3 : the :- N : (lambda $0:e (def:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1365023124 : 1 : 10.0 : [*[3-3 :: lex :: the :- N : (lambda $0:e (def:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#24#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[3-4 : the mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=-1733081186 : 1 : 40.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 377926141, -999596390]{{} -> 0.0}]]
[3-4 : the mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=40.0 : numParses=2 : numViterbiParses=1 : hash=-1660986966 : 2 : 40.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 305831921, 1132544306]{{} -> 0.0}, [3-4 :: >comp1 :: 3-3, 4-4 :: 377926141, -927502170]{{} -> 0.0}]]
[3-4 : the mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=497222029 : 1 : 40.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -1686737940, -999596390]{{} -> 0.0}]]
[3-4 : the mod :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1737698791 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 373308536, -999596390]{{} -> 0.0}]]
[3-4 : the mod :- S : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (def:<e,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-442344579 : 1 : 30.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: 305831921, 2130151161]{{} -> 0.0}]]
[3-4 : the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=100346380 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -1119963183, -999596390]{{} -> 0.0}]]
[3-4 : the mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (mod:<e,t> $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=172440600 : 2 : 30.0 : [[3-4 :: >comp1 :: 3-3, 4-4 :: -1119963183, -927502170]{{} -> 0.0}, *[3-4 :: >comp1 :: 3-3, 4-4 :: -1192057403, 1132544306]{{} -> 0.0}]]
[3-4 : the mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=569316249 : 2 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -1686737940, -927502170]{{} -> 0.0}, *[3-4 :: >comp1 :: 3-3, 4-4 :: -1758832160, 1132544306]{{} -> 0.0}]]
[3-4 : the mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=888632828 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 545457621, -999596390]{{} -> 0.0}]]
[3-4 : the mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=960727048 : 2 : 30.0 : [[3-4 :: >comp1 :: 3-3, 4-4 :: 545457621, -927502170]{{} -> 0.0}, *[3-4 :: >comp1 :: 3-3, 4-4 :: 473363401, 1132544306]{{} -> 0.0}]]
[3-4 : the mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1665604571 : 1 : 20.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 373308536, -927502170]{{} -> 0.0}]]
[3-4 : the mod :- NP : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (mod:<e,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-440023764 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: -1758832160, 2130151161]{{} -> 0.0}]]
[3-4 : the mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (mod:<e,t> $2))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=124888351 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: -1192057403, 2130151161]{{} -> 0.0}]]
[3-4 : the mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (mod:<e,t> $2))) (pickup:<a,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1456909871 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: 473363401, 2130151161]{{} -> 0.0}]]
[3-5 : the mod obj :- S : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=60.0 : numParses=1 : numViterbiParses=1 : hash=-614690546 : 1 : 60.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 377926141, 723434118]{{} -> 0.0}]]
[3-5 : the mod obj :- NP : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (obj:<e,t> $0) (def:<e,t> $0))) : prune=60.0 : numParses=1 : numViterbiParses=1 : hash=-612369731 : 1 : 60.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: -1686737940, 723434118]{{} -> 0.0}]]
[3-5 : the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2)))))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=-2138342112 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: -1119963183, 723434118]{{} -> 0.0}]]
[3-5 : the mod obj :- N : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=-614695351 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 373308536, 723434118]{{} -> 0.0}]]
[3-5 : the mod obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1) (obj:<e,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=2 : hash=24973338 : 4 : 50.0 : [[3-5 :: >comp1 :: 3-4, 5-5 :: 569316249, 1336477524]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: -1758832160, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1686737940, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 497222029, -898443296]{{} -> 0.0}]]
[3-5 : the mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=1085210144 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 545457621, 723434118]{{} -> 0.0}]]
[3-5 : the mod obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=2017543199 : 3 : 50.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: -1660986966, 1264383304]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 305831921, 1492610263]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: 377926141, -567436213]{{} -> 0.0}]]
[3-5 : the mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=4 : hash=2089637419 : 4 : 50.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: -1733081186, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 377926141, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 305831921, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -1660986966, 1336477524]{{} -> 0.0}]]
[3-5 : the mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-365804275 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 172440600, 1264383304]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: -1119963183, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1192057403, 1492610263]{{} -> 0.0}]]
[3-5 : the mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3))))))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=-293710055 : 4 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 172440600, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1192057403, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 100346380, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1119963183, -495341993]{{} -> 0.0}]]
[3-5 : the mod obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) (obj:<e,t> $1) ($0 $1)))) : prune=40.0 : numParses=4 : numViterbiParses=4 : hash=-47120882 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 569316249, 1264383304]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1758832160, 1492610263]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -1686737940, -567436213]{{} -> 0.0}]]
[3-5 : the mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=1805085213 : 3 : 40.0 : [[3-5 :: >comp1 :: 3-3, 4-5 :: 545457621, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 960727048, 1264383304]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 473363401, 1492610263]{{} -> 0.0}]]
[3-5 : the mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=1877179433 : 4 : 40.0 : [*[3-5 :: >comp1 :: 3-3, 4-5 :: 473363401, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 960727048, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 545457621, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 888632828, -898443296]{{} -> 0.0}]]
[3-5 : the mod obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=2085019814 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: -1737698791, -898443296]{{} -> 0.0}, [3-5 :: >comp1 :: 3-4, 5-5 :: -1665604571, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 373308536, -495341993]{{} -> 0.0}]]
[3-5 : the mod obj :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=2012925594 : 2 : 30.0 : [*[3-5 :: >comp1 :: 3-3, 4-5 :: 373308536, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -1665604571, 1264383304]{{} -> 0.0}]]
[4-4 : mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-999596390 : 1 : 20.0 : [*[4-4 :: lex :: mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1065067691 : 1 : 20.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1132544306 : 1 : 20.0 : [*[4-4 :: lex :: mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1137161911 : 1 : 20.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1945535155 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#22#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1873440935 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#22#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-927502170 : 1 : 10.0 : [*[4-4 :: lex :: mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=108206269 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#18=0.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=180300489 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- N : (lambda $0:e (mod:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=2130151161 : 1 : 10.0 : [*[4-4 :: lex :: mod :- N : (lambda $0:e (mod:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#22#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-5 : mod obj :- S : (lambda $0:e (and:<t*,t> (obj:<e,t> $0) (mod:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=721113303 : 1 : 40.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: 1065067691, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- NP : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (obj:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=723434118 : 1 : 40.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: -999596390, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (mod:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (obj:<e,t> $2))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1533355423 : 1 : 30.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: -1945535155, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-495341993 : 2 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -999596390, -898443296]{{} -> 0.0}, [4-5 :: >comp1 :: 4-4, 5-5 :: -927502170, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) (obj:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1492610263 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1132544306, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) (obj:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1497227868 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1137161911, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (mod:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (obj:<e,t> $2))) (pickup:<a,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1526413893 : 1 : 30.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: 108206269, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (obj:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1564704483 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1132544306, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (obj:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=1569322088 : 2 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1065067691, -898443296]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: 1137161911, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-567436213 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -927502170, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3))))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-552567090 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -1873440935, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3))))))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-480472870 : 2 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -1945535155, -898443296]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: -1873440935, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=254143950 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 180300489, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=326238170 : 2 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 180300489, 1336477524]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: 108206269, -898443296]{{} -> 0.0}]]
[5-5 : obj :- N : (lambda $0:e (obj:<e,t> $0)) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1200199578 : 1 : 20.0 : [*[5-5 :: lex :: obj :- N : (lambda $0:e (obj:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 20.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-965919911 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-898443296 : 1 : 10.0 : [*[5-5 :: lex :: obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-893825691 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-729809831 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#5#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-657715611 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#5#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1264383304 : 1 : 10.0 : [*[5-5 :: lex :: obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1309591441 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1336477524 : 1 : 10.0 : [*[5-5 :: lex :: obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1381685661 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
Spans pruned: [(0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (1, 5)]

[111.44] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3))))))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#40#7=21.435(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#40=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#14#12=21.435(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#35#41=21.435(1.000),FACLEX#TMP#41=0.000(0.100),FACLEX#XEME#35=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#41#60=21.435(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#41=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#10#8=21.435(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#7#51=21.435(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#7=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#25#73=21.435(1.000),FACLEX#TMP#73=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#43#49=21.435(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#43=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#6#32=21.435(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#12#22=21.435(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#26#47=21.435(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#10#8=21.435(0.091),FACLEX#LEX#12#22=21.435(0.091),FACLEX#LEX#14#12=21.435(0.091),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#25#73=21.435(0.091),FACLEX#LEX#26#47=21.435(0.091),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#35#41=21.435(0.091),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#40#7=21.435(0.091),FACLEX#LEX#41#60=21.435(0.091),FACLEX#LEX#43#49=21.435(0.091),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#6#32=21.435(0.091),FACLEX#LEX#65#77=10.000(0.333),FACLEX#LEX#7#51=21.435(0.091),FACLEX#TMP#12=0.000(0.009),FACLEX#TMP#22=0.000(0.009),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#32=0.000(0.009),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#41=0.000(0.009),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#47=0.000(0.009),FACLEX#TMP#49=0.000(0.009),FACLEX#TMP#51=0.000(0.009),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#60=0.000(0.009),FACLEX#TMP#7=0.000(0.009),FACLEX#TMP#73=0.000(0.009),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#8=0.000(0.009),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#10=10.000(0.091),FACLEX#XEME#12=10.000(0.091),FACLEX#XEME#14=10.000(0.091),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#25=10.000(0.091),FACLEX#XEME#26=10.000(0.091),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#35=10.000(0.091),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#40=10.000(0.091),FACLEX#XEME#41=10.000(0.091),FACLEX#XEME#43=10.000(0.091),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#6=10.000(0.091),FACLEX#XEME#65=10.000(0.333),FACLEX#XEME#7=10.000(0.091),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3))))))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#26#61=0.000(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3))))))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#21#36=0.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#21=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3)))) (pickup:<a,t> $0)))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#41#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#41=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#26#32=0.000(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#26#32=0.000(0.500),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#41#22=0.000(0.500),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#65#77=10.000(0.333),FACLEX#TMP#22=0.000(0.050),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#32=0.000(0.050),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#26=10.000(0.500),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#41=10.000(0.500),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#65=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) (obj:<e,t> $3)))) (pickup:<a,t> $0)))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#21#8=0.0(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#21=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#21#8=0.0(1.000),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#65#77=10.000(0.333),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#8=0.000(0.100),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#21=10.000(1.000),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#65=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3))))))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#10#36=0.0(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#25#23=0.000(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#6#61=0.0(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#26#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#40#48=0.000(1.000),FACLEX#TMP#48=0.000(0.100),FACLEX#XEME#40=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#14#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#10#36=0.0(0.167),FACLEX#LEX#14#25=0.0(0.167),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#25#23=0.000(0.167),FACLEX#LEX#26#37=0.0(0.167),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#40#48=0.000(0.167),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#6#61=0.0(0.167),FACLEX#LEX#65#77=10.000(0.333),FACLEX#TMP#23=0.000(0.017),FACLEX#TMP#25=0.000(0.017),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#36=0.000(0.017),FACLEX#TMP#37=0.000(0.017),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#48=0.000(0.017),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#61=0.000(0.017),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#10=10.000(0.167),FACLEX#XEME#14=10.000(0.167),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#25=10.000(0.167),FACLEX#XEME#26=10.000(0.167),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#40=10.000(0.167),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#6=10.000(0.167),FACLEX#XEME#65=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3))))))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#6#37=0.000(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#6#37=0.000(1.000),FACLEX#LEX#65#77=10.000(0.333),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#37=0.000(0.100),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#6=10.000(1.000),FACLEX#XEME#65=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000)}
[90.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (quickly:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (def:<e,t> $3)))) (pickup:<a,t> $0)))
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#32#58=10.000(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#39#81=10.000(1.000),FACLEX#TMP#81=0.000(0.100),FACLEX#XEME#39=10.000(1.000)}]
	[20.000000] quickly :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (quickly:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#65#77=10.000(1.000),FACLEX#TMP#77=0.000(0.100),FACLEX#XEME#65=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#12#60=0.0(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#36#66=0.0(1.000),FACLEX#TMP#66=0.000(0.100),FACLEX#XEME#36=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#6#47=0.0(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#12#60=0.0(0.333),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#32#58=10.000(0.333),FACLEX#LEX#36#66=0.0(0.333),FACLEX#LEX#39#81=10.000(0.333),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#6#47=0.0(0.333),FACLEX#LEX#65#77=10.000(0.333),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#47=0.000(0.033),FACLEX#TMP#58=0.000(0.033),FACLEX#TMP#60=0.000(0.033),FACLEX#TMP#66=0.000(0.033),FACLEX#TMP#77=0.000(0.033),FACLEX#TMP#81=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#32=10.000(0.333),FACLEX#XEME#36=10.000(0.333),FACLEX#XEME#39=10.000(0.333),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#6=10.000(0.333),FACLEX#XEME#65=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (def:<e,t> $2) (self:<e,t> $2)))) (quickly:<a,t> $0)))
	[10.000000] quickly :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (quickly:<a,t> $1)))) [{FACLEX#LEX#32#51=0.0(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[10.000000] pick up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))) [{FACLEX#LEX#14#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	[10.000000] quickly :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (quickly:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#32#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#32=10.000(1.000)}]
	[10.000000] pick up :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#14#4=0.0(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	Rules: lex[0-0], lex[1-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[1-2, 3-5], >apply[0-0, 1-5]
	Features: {FACLEX#LEX#14#4=0.0(0.500),FACLEX#LEX#14#40=0.0(0.500),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#32#33=0.0(0.500),FACLEX#LEX#32#51=0.0(0.500),FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#33=0.000(0.050),FACLEX#TMP#4=0.000(0.050),FACLEX#TMP#40=0.000(0.150),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#51=0.000(0.050),FACLEX#XEME#14=10.000(1.000),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#32=10.000(1.000),FACLEX#XEME#5=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#quickly:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)}
