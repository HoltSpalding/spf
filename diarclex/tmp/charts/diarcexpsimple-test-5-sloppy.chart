[0-0 : x :- S/PP : (lambda $0:<<e,t>,t> (x:<<<e,t>,t>,t> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1084798244 : 1 : 20.0 : [*[0-0 :: lex :: x :- S/PP : (lambda $0:<<e,t>,t> (x:<<<e,t>,t>,t> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))){fixed_domain}]{{FACLEX#LEX#6#7=10.000(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 20.0}]]
[0-0 : x :- EMPTY : prune=-1.0 : numParses=1 : numViterbiParses=1 : hash=29791 : 1 : -1.0 : [*[0-0 :: lex :: x :- EMPTY{skipping}]{{DYNSKIP=-1.000(1.000)} -> -1.0}]]
[0-1 : x on :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=-1905428941 : 1 : 19.0 : [*[0-1 :: <skip :: 0-0, 1-1 :: 29791, -1905427980]{{} -> 0.0}]]
[0-1 : x on :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=-1748158400 : 1 : 19.0 : [*[0-1 :: <skip :: 0-0, 1-1 :: 29791, -1748157439]{{} -> 0.0}]]
[0-1 : x on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=101976838 : 1 : 19.0 : [*[0-1 :: <skip :: 0-0, 1-1 :: 29791, 101977799]{{} -> 0.0}]]
[0-1 : x on :- S/PP : (lambda $0:<<e,t>,t> (x:<<<e,t>,t>,t> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=1084798245 : 1 : 19.0 : [*[0-1 :: >skip :: 0-0, 1-1 :: 1084798244, 30753]{{} -> 0.0}]]
[0-1 : x on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=182412313 : 1 : 9.0 : [*[0-1 :: <skip :: 0-0, 1-1 :: 29791, 182413274]{{} -> 0.0}]]
[0-1 : x on :- EMPTY : prune=-2.0 : numParses=1 : numViterbiParses=1 : hash=29792 : 1 : -2.0 : [*[0-1 :: <skip :: 0-0, 1-1 :: 29791, 30753]{{} -> 0.0}]]
[0-2 : x on the :- PP/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=-637108471 : 2 : 39.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1905428941, 1277045402]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, -637107510]{{} -> 0.0}]]
[0-2 : x on the :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=-565014251 : 2 : 39.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, -565013290]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -1905428941, 1349139622]{{} -> 0.0}]]
[0-2 : x on the :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=39.0 : numParses=18 : numViterbiParses=18 : hash=320541497 : 2 : 39.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1748158400, 1277045402]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, 320542458]{{} -> 0.0}]]
[0-2 : x on the :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=39.0 : numParses=18 : numViterbiParses=18 : hash=392635717 : 2 : 39.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, 392636678]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -1748158400, 1349139622]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=1370297308 : 2 : 39.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, 1370298269]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: 101976838, 1277045402]{{} -> 0.0}]]
[0-2 : x on the :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=1442391528 : 2 : 39.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, 1442392489]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: 101976838, 1349139622]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 definite:d))))))) : prune=19.0 : numParses=4 : numViterbiParses=4 : hash=-1249045236 : 2 : 19.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 182412313, -957875418]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, -1249044275]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 blue:d))))))) : prune=19.0 : numParses=2 : numViterbiParses=2 : hash=-1020012028 : 2 : 19.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 182412313, 1376883402]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, -1020011067]{{} -> 0.0}]]
[0-2 : x on the :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=18.0 : numParses=2 : numViterbiParses=2 : hash=-1905428940 : 2 : 18.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, -1905427979]{{} -> 0.0}, *[0-2 :: >skip :: 0-1, 2-2 :: -1905428941, 31715]{{} -> 0.0}]]
[0-2 : x on the :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=18.0 : numParses=6 : numViterbiParses=6 : hash=-1748158399 : 2 : 18.0 : [*[0-2 :: <skip :: 0-0, 1-2 :: 29791, -1748157438]{{} -> 0.0}, *[0-2 :: >skip :: 0-1, 2-2 :: -1748158400, 31715]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=-953259735 : 1 : 18.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, -953257813]{{} -> 0.0}]]
[0-2 : x on the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=-881165515 : 1 : 18.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, -881163593]{{} -> 0.0}]]
[0-2 : x on the :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=18.0 : numParses=2 : numViterbiParses=2 : hash=101976839 : 2 : 18.0 : [*[0-2 :: >skip :: 0-1, 2-2 :: 101976838, 31715]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, 101977800]{{} -> 0.0}]]
[0-2 : x on the :- S/PP : (lambda $0:<<e,t>,t> (x:<<<e,t>,t>,t> (lambda $1:<e,t> ($0 (lambda $2:e ($1 $2)))))) : prune=18.0 : numParses=1 : numViterbiParses=1 : hash=1084798246 : 1 : 18.0 : [*[0-2 :: >skip :: 0-1, 2-2 :: 1084798245, 31715]{{} -> 0.0}]]
[0-2 : x on the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=1277043480 : 1 : 18.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 1277045402]{{} -> 0.0}]]
[0-2 : x on the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=1349137700 : 1 : 18.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 1349139622]{{} -> 0.0}]]
[0-2 : x on the :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))) : prune=8.0 : numParses=1 : numViterbiParses=1 : hash=-1576895873 : 1 : 8.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, -1576893951]{{} -> 0.0}]]
[0-2 : x on the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=8.0 : numParses=2 : numViterbiParses=2 : hash=-957877340 : 1 : 8.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, -957875418]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) : prune=8.0 : numParses=2 : numViterbiParses=2 : hash=182412314 : 2 : 8.0 : [*[0-2 :: >skip :: 0-1, 2-2 :: 182412313, 31715]{{} -> 0.0}, *[0-2 :: <skip :: 0-0, 1-2 :: 29791, 182413275]{{} -> 0.0}]]
[0-2 : x on the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=8.0 : numParses=1 : numViterbiParses=1 : hash=1376881480 : 1 : 8.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 1376883402]{{} -> 0.0}]]
[0-2 : x on the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=8.0 : numParses=1 : numViterbiParses=1 : hash=1381499085 : 1 : 8.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 1381501007]{{} -> 0.0}]]
[0-2 : x on the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=8.0 : numParses=1 : numViterbiParses=1 : hash=1453593305 : 1 : 8.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 1453595227]{{} -> 0.0}]]
[0-2 : x on the :- EMPTY : prune=-3.0 : numParses=1 : numViterbiParses=1 : hash=29793 : 1 : -3.0 : [*[0-2 :: <skip :: 0-1, 2-2 :: 29792, 31715]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=59.0 : numParses=18 : numViterbiParses=18 : hash=-770134615 : 2 : 59.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 101976838, -1649073914]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -770133654]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=59.0 : numParses=18 : numViterbiParses=18 : hash=-767754218 : 2 : 59.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -767753257]{{} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: -1905428941, -1649073914]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=-1162934993 : 2 : 49.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 101976838, -1998085620]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -1162934032]{{} -> 0.0}]]
[0-3 : x on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=-1160554596 : 2 : 49.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: -1905428941, -1998085620]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -1160553635]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=-986757745 : 2 : 49.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 101976838, 1430026860]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -986756784]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=-984377348 : 2 : 49.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -984376387]{{} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: -1905428941, 1430026860]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=91623727 : 2 : 49.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, 91624688]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: 101976838, -1308512756]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=6 : numViterbiParses=6 : hash=94004124 : 2 : 49.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: -1905428941, -1308512756]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, 94005085]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=12 : numViterbiParses=12 : hash=573833513 : 2 : 49.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, 573834474]{{} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: 101976838, -74492794]{{} -> 0.0}]]
[0-3 : x on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=49.0 : numParses=12 : numViterbiParses=12 : hash=576213910 : 2 : 49.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: -1905428941, -74492794]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, 576214871]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=-579848373 : 2 : 39.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -579847412]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: 182412313, 793999102]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=39.0 : numParses=12 : numViterbiParses=12 : hash=-518427549 : 2 : 39.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -518426588]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -1651399534]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=38.0 : numParses=18 : numViterbiParses=18 : hash=-1651396651 : 2 : 38.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: -953259735, -1849529764]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-1, 2-3 :: 29792, -1651394729]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=29.0 : numParses=2 : numViterbiParses=2 : hash=-1481331077 : 2 : 29.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -1481330116]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-1, 2-3 :: 182412313, 877115992]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 definite:d)))))) : prune=29.0 : numParses=8 : numViterbiParses=8 : hash=-754848925 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -76818414]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -754847964]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=29.0 : numParses=2 : numViterbiParses=2 : hash=-747460757 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, 1352965904]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -747459796]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=29.0 : numParses=4 : numViterbiParses=4 : hash=-732684421 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, 1427701240]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -732683460]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=29.0 : numParses=4 : numViterbiParses=4 : hash=-496263045 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -1310838376]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -496262084]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 definite:d)))))) : prune=29.0 : numParses=4 : numViterbiParses=4 : hash=-496263045 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -2000411240]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -496262084]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 blue:d)))))) : prune=29.0 : numParses=4 : numViterbiParses=4 : hash=-422381365 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -469983170]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -422380404]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 blue:d)))))) : prune=29.0 : numParses=2 : numViterbiParses=2 : hash=168672075 : 2 : 29.0 : [*[0-3 :: >apply :: 0-1, 2-3 :: 182412313, -356793920]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, 168673036]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=28.0 : numParses=6 : numViterbiParses=6 : hash=-2000408357 : 2 : 28.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, -2000406435]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: -953259735, 210102333]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=28.0 : numParses=6 : numViterbiParses=6 : hash=-1310835493 : 2 : 28.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, -1310833571]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: -953259735, 446348197]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=28.0 : numParses=12 : numViterbiParses=12 : hash=-76815531 : 2 : 28.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, -76813609]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: -953259735, -216454212]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=28.0 : numParses=6 : numViterbiParses=6 : hash=794001985 : 2 : 28.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: 1381499085, -1849529764]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-1, 2-3 :: 29792, 794003907]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 surface:e))))) : prune=28.0 : numParses=9 : numViterbiParses=9 : hash=1108816453 : 2 : 28.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: 182412314, -1849529764]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, 1108817414]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=28.0 : numParses=6 : numViterbiParses=6 : hash=1427704123 : 2 : 28.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, 1427706045]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: -953259735, 1266361337]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> self:e $1))))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=-666190909 : 2 : 18.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: 182412314, 210102333]{{} -> 0.0}, *[0-3 :: <skip :: 0-0, 1-3 :: 29791, -666189948]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> surface:e $1))))) : prune=18.0 : numParses=6 : numViterbiParses=6 : hash=-487027835 : 2 : 18.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -487026874]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: 182412314, -216454212]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=18.0 : numParses=4 : numViterbiParses=4 : hash=-469980287 : 2 : 18.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, -469978365]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: 1381499085, -216454212]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=18.0 : numParses=2 : numViterbiParses=2 : hash=-356791037 : 2 : 18.0 : [*[0-3 :: <skip :: 0-1, 2-3 :: 29792, -356789115]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: 1381499085, 210102333]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 tomato:e))))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=-23420293 : 2 : 18.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, -23419332]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: 182412314, 1266361337]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=18.0 : numParses=2 : numViterbiParses=2 : hash=877118875 : 2 : 18.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: 1381499085, 1266361337]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-1, 2-3 :: 29792, 877120797]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 cuttingboard:e))))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=929653379 : 2 : 18.0 : [*[0-3 :: <skip :: 0-0, 1-3 :: 29791, 929654340]{{} -> 0.0}, *[0-3 :: >apply :: 0-2, 3-3 :: 182412314, 446348197]{{} -> 0.0}]]
[0-3 : x on the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=18.0 : numParses=2 : numViterbiParses=2 : hash=1352968787 : 2 : 18.0 : [*[0-3 :: >apply :: 0-2, 3-3 :: 1381499085, 446348197]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}, *[0-3 :: <skip :: 0-1, 2-3 :: 29792, 1352970709]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.0}]]
[1-1 : on :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1905427980 : 1 : 20.0 : [*[1-1 :: lex :: on :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))){fixed_domain}]{{FACLEX#LEX#25#38=10.000(1.000),FACLEX#TMP#38=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 20.0}]]
[1-1 : on :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-1748157439 : 3 : 20.0 : [*[1-1 :: lex :: on :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))){fixed_domain}]{{FACLEX#LEX#34#39=10.000(1.000),FACLEX#TMP#39=0.000(0.100),FACLEX#XEME#34=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: on :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))){fixed_domain}]{{FACLEX#LEX#9#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#9=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: on :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))){fixed_domain}]{{FACLEX#LEX#45#53=10.000(1.000),FACLEX#TMP#53=0.000(0.100),FACLEX#XEME#45=10.000(1.000)} -> 20.0}]]
[1-1 : on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=101977799 : 1 : 20.0 : [*[1-1 :: lex :: on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))){fixed_domain}]{{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 20.0}]]
[1-1 : on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=182413274 : 1 : 10.0 : [*[1-1 :: lex :: on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))){fixed_domain}]{{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 10.0}]]
[1-1 : on :- EMPTY : prune=-1.0 : numParses=1 : numViterbiParses=1 : hash=30753 : 1 : -1.0 : [*[1-1 :: lex :: on :- EMPTY{skipping}]{{DYNSKIP=-1.000(1.000)} -> -1.0}]]
[1-2 : on the :- PP/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=40.0 : numParses=3 : numViterbiParses=3 : hash=-637107510 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: -1905427980, 1277045402]{{} -> 0.0}]]
[1-2 : on the :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=40.0 : numParses=3 : numViterbiParses=3 : hash=-565013290 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: -1905427980, 1349139622]{{} -> 0.0}]]
[1-2 : on the :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=40.0 : numParses=9 : numViterbiParses=9 : hash=320542458 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: -1748157439, 1277045402]{{} -> 0.0}]]
[1-2 : on the :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=40.0 : numParses=9 : numViterbiParses=9 : hash=392636678 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: -1748157439, 1349139622]{{} -> 0.0}]]
[1-2 : on the :- S/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=40.0 : numParses=3 : numViterbiParses=3 : hash=1370298269 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: 101977799, 1277045402]{{} -> 0.0}]]
[1-2 : on the :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=40.0 : numParses=3 : numViterbiParses=3 : hash=1442392489 : 1 : 40.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: 101977799, 1349139622]{{} -> 0.0}]]
[1-2 : on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 definite:d))))))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-1249044275 : 1 : 20.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: 182413274, -957875418]{{} -> 0.0}]]
[1-2 : on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 blue:d))))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1020011067 : 1 : 20.0 : [*[1-2 :: >comp1 :: 1-1, 2-2 :: 182413274, 1376883402]{{} -> 0.0}]]
[1-2 : on the :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=-1905427979 : 1 : 19.0 : [*[1-2 :: >skip :: 1-1, 2-2 :: -1905427980, 31715]{{} -> 0.0}]]
[1-2 : on the :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=-1748157438 : 1 : 19.0 : [*[1-2 :: >skip :: 1-1, 2-2 :: -1748157439, 31715]{{} -> 0.0}]]
[1-2 : on the :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=101977800 : 1 : 19.0 : [*[1-2 :: >skip :: 1-1, 2-2 :: 101977799, 31715]{{} -> 0.0}]]
[1-2 : on the :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=182413275 : 1 : 9.0 : [*[1-2 :: >skip :: 1-1, 2-2 :: 182413274, 31715]{{} -> 0.0}]]
[1-3 : on the surface :- N\N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $2:e (and:<t*,t> (name:<e,<e,t>> $2 surface:e) (desc:<e,<d,t>> $2 definite:d))) (lambda $3:e ($0 $3))) (annoying:<e,t> $1)))) : prune=60.0 : numParses=27 : numViterbiParses=27 : hash=-1516486595 : 1 : 60.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1748157439, -1649073914]{{} -> 0.0}]]
[1-3 : on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=60.0 : numParses=9 : numViterbiParses=9 : hash=-770133654 : 1 : 60.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 101977799, -1649073914]{{} -> 0.0}]]
[1-3 : on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=60.0 : numParses=9 : numViterbiParses=9 : hash=-767753257 : 1 : 60.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1905427980, -1649073914]{{} -> 0.0}]]
[1-3 : on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=-1162934032 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 101977799, -1998085620]{{} -> 0.0}]]
[1-3 : on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=-1160553635 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1905427980, -1998085620]{{} -> 0.0}]]
[1-3 : on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=-986756784 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 101977799, 1430026860]{{} -> 0.0}]]
[1-3 : on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=-984376387 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1905427980, 1430026860]{{} -> 0.0}]]
[1-3 : on the surface :- N\N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $2:e (and:<t*,t> (name:<e,<e,t>> $2 cuttingboard:e) (desc:<e,<d,t>> $2 definite:d))) (lambda $3:e ($0 $3))) (annoying:<e,t> $1)))) : prune=50.0 : numParses=9 : numViterbiParses=9 : hash=-810781363 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1748157439, -1308512756]{{} -> 0.0}]]
[1-3 : on the surface :- N\N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $2:e (and:<t*,t> (name:<e,<e,t>> self:e $2) (desc:<e,<d,t>> $2 definite:d))) (lambda $3:e ($0 $3))) (annoying:<e,t> $1)))) : prune=50.0 : numParses=9 : numViterbiParses=9 : hash=-152300211 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1748157439, -1998085620]{{} -> 0.0}]]
[1-3 : on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=91624688 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 101977799, -1308512756]{{} -> 0.0}]]
[1-3 : on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=3 : numViterbiParses=3 : hash=94005085 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1905427980, -1308512756]{{} -> 0.0}]]
[1-3 : on the surface :- S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=6 : numViterbiParses=6 : hash=573834474 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 101977799, -74492794]{{} -> 0.0}]]
[1-3 : on the surface :- N\N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $2:e (and:<t*,t> (name:<e,<e,t>> surface:e $2) (desc:<e,<d,t>> $2 definite:d))) (lambda $3:e ($0 $3))) (annoying:<e,t> $1)))) : prune=50.0 : numParses=18 : numViterbiParses=18 : hash=574201661 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1748157439, -74492794]{{} -> 0.0}]]
[1-3 : on the surface :- PP : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d)))) : prune=50.0 : numParses=6 : numViterbiParses=6 : hash=576214871 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1905427980, -74492794]{{} -> 0.0}]]
[1-3 : on the surface :- N\N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $2:e (and:<t*,t> (name:<e,<e,t>> $2 tomato:e) (desc:<e,<d,t>> $2 definite:d))) (lambda $3:e ($0 $3))) (annoying:<e,t> $1)))) : prune=50.0 : numParses=9 : numViterbiParses=9 : hash=900195533 : 1 : 50.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: -1748157439, 1430026860]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=40.0 : numParses=3 : numViterbiParses=3 : hash=-579847412 : 1 : 40.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, 793999102]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=40.0 : numParses=6 : numViterbiParses=6 : hash=-518426588 : 1 : 40.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -1651399534]{{} -> 0.0}]]
[1-3 : on the surface :- PP/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=-637107509 : 2 : 39.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: -637107510, 32677]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-1, 2-3 :: -1905427980, 1277045403]{{} -> 0.0}]]
[1-3 : on the surface :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=-565013289 : 2 : 39.0 : [*[1-3 :: >comp1 :: 1-1, 2-3 :: -1905427980, 1349139623]{{} -> 0.0}, *[1-3 :: >skip :: 1-2, 3-3 :: -565013290, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- N\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=39.0 : numParses=18 : numViterbiParses=18 : hash=320542459 : 2 : 39.0 : [*[1-3 :: >comp1 :: 1-1, 2-3 :: -1748157439, 1277045403]{{} -> 0.0}, *[1-3 :: >skip :: 1-2, 3-3 :: 320542458, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e (and:<t*,t> ($0 $3) (desc:<e,<d,t>> $3 definite:d))) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=39.0 : numParses=18 : numViterbiParses=18 : hash=392636679 : 2 : 39.0 : [*[1-3 :: >comp1 :: 1-1, 2-3 :: -1748157439, 1349139623]{{} -> 0.0}, *[1-3 :: >skip :: 1-2, 3-3 :: 392636678, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- S/N : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=1370298270 : 2 : 39.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: 1370298269, 32677]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-1, 2-3 :: 101977799, 1277045403]{{} -> 0.0}]]
[1-3 : on the surface :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d))))) : prune=39.0 : numParses=6 : numViterbiParses=6 : hash=1442392490 : 2 : 39.0 : [*[1-3 :: >comp1 :: 1-1, 2-3 :: 101977799, 1349139623]{{} -> 0.0}, *[1-3 :: >skip :: 1-2, 3-3 :: 1442392489, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1481330116 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, 877115992]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 definite:d)))))) : prune=30.0 : numParses=4 : numViterbiParses=4 : hash=-754847964 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -76818414]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 blue:d)))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-747459796 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, 1352965904]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-732683460 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, 1427701240]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 definite:d)))))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-496262084 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -1310838376]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 definite:d)))))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-496262084 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -2000411240]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 blue:d)))))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-422380404 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -469983170]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 blue:d)))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=168673036 : 1 : 30.0 : [*[1-3 :: >apply :: 1-1, 2-3 :: 182413274, -356793920]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 surface:e))))) : prune=29.0 : numParses=3 : numViterbiParses=3 : hash=1108817414 : 1 : 29.0 : [*[1-3 :: >apply :: 1-2, 3-3 :: 182413275, -1849529764]{{} -> 0.0}]]
[1-3 : on the surface :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 definite:d))))))) : prune=19.0 : numParses=4 : numViterbiParses=4 : hash=-1249044274 : 2 : 19.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: -1249044275, 32677]{{} -> 0.0}, *[1-3 :: >comp1 :: 1-1, 2-3 :: 182413274, -957875417]{{} -> 0.0}]]
[1-3 : on the surface :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e (and:<t*,t> ($0 $2) (desc:<e,<d,t>> $2 blue:d))))))) : prune=19.0 : numParses=2 : numViterbiParses=2 : hash=-1020011066 : 2 : 19.0 : [*[1-3 :: >comp1 :: 1-1, 2-3 :: 182413274, 1376883403]{{} -> 0.0}, *[1-3 :: >skip :: 1-2, 3-3 :: -1020011067, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> self:e $1))))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=-666189948 : 1 : 19.0 : [*[1-3 :: >apply :: 1-2, 3-3 :: 182413275, 210102333]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> surface:e $1))))) : prune=19.0 : numParses=2 : numViterbiParses=2 : hash=-487026874 : 1 : 19.0 : [*[1-3 :: >apply :: 1-2, 3-3 :: 182413275, -216454212]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 tomato:e))))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=-23419332 : 1 : 19.0 : [*[1-3 :: >apply :: 1-2, 3-3 :: 182413275, 1266361337]{{} -> 0.0}]]
[1-3 : on the surface :- S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 cuttingboard:e))))) : prune=19.0 : numParses=1 : numViterbiParses=1 : hash=929654340 : 1 : 19.0 : [*[1-3 :: >apply :: 1-2, 3-3 :: 182413275, 446348197]{{} -> 0.0}]]
[1-3 : on the surface :- PP/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=18.0 : numParses=1 : numViterbiParses=1 : hash=-1905427978 : 1 : 18.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: -1905427979, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- N\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (on:<<e,t>,<<e,t>,t>> (lambda $3:e ($0 $3)) (lambda $4:e ($1 $4))) (annoying:<e,t> $2))))) : prune=18.0 : numParses=3 : numViterbiParses=3 : hash=-1748157437 : 1 : 18.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: -1748157438, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) : prune=18.0 : numParses=1 : numViterbiParses=1 : hash=101977801 : 1 : 18.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: 101977800, 32677]{{} -> 0.0}]]
[1-3 : on the surface :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) : prune=8.0 : numParses=1 : numViterbiParses=1 : hash=182413276 : 1 : 8.0 : [*[1-3 :: >skip :: 1-2, 3-3 :: 182413275, 32677]{{} -> 0.0}]]
[2-2 : the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-953257813 : 3 : 20.0 : [*[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 20.0}]]
[2-2 : the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-881163593 : 3 : 20.0 : [*[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#4#19=10.000(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#2#26=10.000(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#10#12=10.000(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 20.0}]]
[2-2 : the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=1277045402 : 3 : 20.0 : [*[2-2 :: lex :: the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 20.0}]]
[2-2 : the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=1349139622 : 3 : 20.0 : [*[2-2 :: lex :: the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#10#51=10.000(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#4#48=10.000(1.000),FACLEX#TMP#48=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#2#14=10.000(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 20.0}]]
[2-2 : the :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1576893951 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))){fixed_domain}]{{FACLEX#LEX#2#17=0.0(1.000),FACLEX#TMP#17=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 10.0}]]
[2-2 : the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-957875418 : 2 : 10.0 : [*[2-2 :: lex :: the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)} -> 10.0}, *[2-2 :: lex :: the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[2-2 : the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1376883402 : 1 : 10.0 : [*[2-2 :: lex :: the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1381501007 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1453595227 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#4#32=0.0(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#4=10.000(1.000)} -> 10.0}]]
[2-2 : the :- EMPTY : prune=-1.0 : numParses=1 : numViterbiParses=1 : hash=31715 : 1 : -1.0 : [*[2-2 :: lex :: the :- EMPTY{skipping}]{{DYNSKIP=-1.000(1.000)} -> -1.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=40.0 : numParses=9 : numViterbiParses=9 : hash=-1651394729 : 1 : 40.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -953257813, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=40.0 : numParses=9 : numViterbiParses=9 : hash=-1649073914 : 1 : 40.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1277045402, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-2000406435 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -953257813, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1998085620 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1277045402, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=-1651399534 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -957875418, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1310833571 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -953257813, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1308512756 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1277045402, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=-76813609 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -953257813, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=-74492794 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1277045402, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=793999102 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1376883402, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=794003907 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1381501007, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> definite:d) (name:<e,<e,t>> $1 surface:e) ($0 $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=795791388 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1576893951, -1849529764]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=1427706045 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -953257813, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=1430026860 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1277045402, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-2000411240 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -957875418, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> definite:d) (name:<e,<e,t>> $1 tomato:e) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1846054266 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1576893951, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> definite:d) (name:<e,<e,t>> self:e $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1499694306 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1576893951, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> definite:d) (name:<e,<e,t>> surface:e $1) ($0 $1)))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-1418560548 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1576893951, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-1310838376 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -957875418, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-469983170 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1376883402, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-469978365 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1381501007, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-356793920 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1376883402, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-356789115 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1381501007, 210102333]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=4 : numViterbiParses=4 : hash=-76818414 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -957875418, -216454212]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=877115992 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1376883402, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=877120797 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1381501007, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1352965904 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1376883402, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1352970709 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 1381501007, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=1427701240 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -957875418, 1266361337]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> definite:d) (name:<e,<e,t>> $1 cuttingboard:e) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=2037327822 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1576893951, 446348197]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=-953257812 : 1 : 19.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: -953257813, 32677]{{} -> 0.0}]]
[2-3 : the surface :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=-881163592 : 1 : 19.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: -881163593, 32677]{{} -> 0.0}]]
[2-3 : the surface :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=1277045403 : 1 : 19.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: 1277045402, 32677]{{} -> 0.0}]]
[2-3 : the surface :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=19.0 : numParses=3 : numViterbiParses=3 : hash=1349139623 : 1 : 19.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: 1349139622, 32677]{{} -> 0.0}]]
[2-3 : the surface :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=-1576893950 : 1 : 9.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: -1576893951, 32677]{{} -> 0.0}]]
[2-3 : the surface :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=9.0 : numParses=2 : numViterbiParses=2 : hash=-957875417 : 1 : 9.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: -957875418, 32677]{{} -> 0.0}]]
[2-3 : the surface :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=1376883403 : 1 : 9.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: 1376883402, 32677]{{} -> 0.0}]]
[2-3 : the surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=1381501008 : 1 : 9.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: 1381501007, 32677]{{} -> 0.0}]]
[2-3 : the surface :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=9.0 : numParses=1 : numViterbiParses=1 : hash=1453595228 : 1 : 9.0 : [*[2-3 :: >skip :: 2-2, 3-3 :: 1453595227, 32677]{{} -> 0.0}]]
[3-3 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-1849529764 : 3 : 20.0 : [*[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)} -> 20.0}, *[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)} -> 20.0}, *[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)} -> 20.0}]]
[3-3 : surface :- NP : surface:e : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2015896902 : 1 : 10.0 : [*[3-3 :: lex :: surface :- NP : surface:e{fixed_domain}]{{FACLEX#LEX#23#54=0.0(1.000),FACLEX#TMP#54=0.000(0.100),FACLEX#XEME#23=10.000(1.000)} -> 10.0}]]
[3-3 : surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-216454212 : 2 : 10.0 : [*[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)){fixed_domain}]{{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)} -> 10.0}, *[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)){fixed_domain}]{{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)} -> 10.0}]]
[3-3 : surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=210102333 : 1 : 10.0 : [*[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)){fixed_domain}]{{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)} -> 10.0}]]
[3-3 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=446348197 : 1 : 10.0 : [*[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)){fixed_domain}]{{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)} -> 10.0}]]
[3-3 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1266361337 : 1 : 10.0 : [*[3-3 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)){fixed_domain}]{{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)} -> 10.0}]]
[3-3 : surface :- EMPTY : prune=-1.0 : numParses=1 : numViterbiParses=1 : hash=32677 : 1 : -1.0 : [*[3-3 :: lex :: surface :- EMPTY{skipping}]{{DYNSKIP=-1.000(1.000)} -> -1.0}]]
Spans pruned: []

[59.00] S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))))
	[0.000000] x :- EMPTY [{}]
	[20.000000] on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) [{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#40=10.000(0.333),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#2#20=10.000(0.333),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#25#36=10.000(1.000),FACLEX#LEX#4#13=10.000(0.333),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#13=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.033),FACLEX#TMP#43=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(0.333),FACLEX#XEME#44=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[49.00] S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))))
	[0.000000] x :- EMPTY [{}]
	[20.000000] on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) [{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[1-1, 2-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >apply[0-1, 2-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#40=10.000(0.333),FACLEX#LEX#2#20=10.000(0.333),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#25#36=10.000(1.000),FACLEX#LEX#4#13=10.000(0.333),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#13=0.000(0.033),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(0.333),FACLEX#XEME#44=10.000(0.500)}
[49.00] S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))))
	[0.000000] x :- EMPTY [{}]
	[20.000000] on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) [{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#40=10.000(0.333),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#2#20=10.000(0.333),FACLEX#LEX#25#36=10.000(1.000),FACLEX#LEX#4#13=10.000(0.333),FACLEX#TMP#13=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#33=0.000(0.100),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(0.333)}
[49.00] S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))))
	[0.000000] x :- EMPTY [{}]
	[20.000000] on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) [{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#40=10.000(0.333),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#2#20=10.000(0.333),FACLEX#LEX#25#36=10.000(1.000),FACLEX#LEX#4#13=10.000(0.333),FACLEX#TMP#13=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[49.00] S : (on:<<e,t>,t> (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))))
	[0.000000] x :- EMPTY [{}]
	[20.000000] on :- S/NP : (lambda $0:<e,t> (on:<<e,t>,t> (lambda $1:e ($0 $1)))) [{FACLEX#LEX#25#36=10.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#13=10.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[1-1, 2-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >apply[0-1, 2-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#40=10.000(0.333),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#2#20=10.000(0.333),FACLEX#LEX#25#36=10.000(1.000),FACLEX#LEX#4#13=10.000(0.333),FACLEX#TMP#13=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.033),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[39.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 definite:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[1-1, 2-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >apply[0-1, 2-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#37=0.0(0.500),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#2#30=0.000(0.500),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#30=0.000(0.050),FACLEX#TMP#37=0.000(0.050),FACLEX#TMP#43=0.000(0.033),FACLEX#XEME#10=10.000(0.500),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#2=10.000(0.500),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#44=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[39.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 surface:e) (desc:<e,<d,t>> $1 blue:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[1-1, 2-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >apply[0-1, 2-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#4#4=0.000(1.000),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#4=0.000(0.100),FACLEX#TMP#43=0.000(0.033),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(1.000),FACLEX#XEME#44=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[38.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], <skip[0-1, 2-2], lex[3-3], >apply[0-2, 3-3], >apply[2-2, 3-3], <skip[0-1, 2-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#10#49=10.000(0.333),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#2#2=10.000(0.333),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#4#18=10.000(0.333),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#18=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#43=0.000(0.033),FACLEX#TMP#49=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#4=10.000(0.333),FACLEX#XEME#44=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 definite:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#37=0.0(0.500),FACLEX#LEX#2#30=0.000(0.500),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#30=0.000(0.050),FACLEX#TMP#37=0.000(0.050),FACLEX#XEME#10=10.000(0.500),FACLEX#XEME#2=10.000(0.500),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#44=10.000(0.500)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> surface:e $1) (desc:<e,<d,t>> $1 blue:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#4#4=0.000(1.000),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(1.000),FACLEX#XEME#44=10.000(0.500)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 definite:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#37=0.0(0.500),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#2#30=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#30=0.000(0.050),FACLEX#TMP#33=0.000(0.100),FACLEX#TMP#37=0.000(0.050),FACLEX#XEME#10=10.000(0.500),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.500),FACLEX#XEME#25=10.000(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> self:e $1) (desc:<e,<d,t>> $1 blue:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#33=0.000(0.100),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 definite:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#37=0.0(0.500),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#2#30=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#30=0.000(0.050),FACLEX#TMP#37=0.000(0.050),FACLEX#XEME#10=10.000(0.500),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.500),FACLEX#XEME#25=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 tomato:e) (desc:<e,<d,t>> $1 blue:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[1-1, 2-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >apply[0-1, 2-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 definite:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#30=0.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#10#37=0.0(0.500),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#2#30=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#30=0.000(0.050),FACLEX#TMP#37=0.000(0.050),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#10=10.000(0.500),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.500),FACLEX#XEME#25=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[29.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (and:<t*,t> (name:<e,<e,t>> $1 cuttingboard:e) (desc:<e,<d,t>> $1 blue:d))))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] the :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], >apply[0-1, 2-3], >apply[1-1, 2-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(1.000),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#4#4=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#4=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#4=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[28.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 surface:e)))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[0.000000] the :- EMPTY [{}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], >skip[0-1, 2-2], >skip[1-1, 2-2], <skip[0-0, 1-2], lex[3-3], >apply[0-2, 3-3], >apply[1-2, 3-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#43=0.000(0.033),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#44=10.000(0.333)}
[28.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#10#49=10.000(0.333),FACLEX#LEX#2#2=10.000(0.333),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#4#18=10.000(0.333),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#18=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#49=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#4=10.000(0.333),FACLEX#XEME#44=10.000(0.500)}
[28.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#10#49=10.000(0.333),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#2#2=10.000(0.333),FACLEX#LEX#4#18=10.000(0.333),FACLEX#TMP#18=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#33=0.000(0.100),FACLEX#TMP#49=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#4=10.000(0.333)}
[28.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#10#49=10.000(0.333),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#2#2=10.000(0.333),FACLEX#LEX#4#18=10.000(0.333),FACLEX#TMP#18=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#49=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#4=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[28.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#44#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#18#43=10.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], <skip[0-1, 2-2], lex[3-3], >apply[0-2, 3-3], >apply[2-2, 3-3], <skip[0-1, 2-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#43=10.000(0.333),FACLEX#LEX#23#10=10.000(0.333),FACLEX#LEX#4#46=0.0(1.000),FACLEX#LEX#44#1=10.000(0.333),FACLEX#TMP#1=0.000(0.033),FACLEX#TMP#10=0.000(0.033),FACLEX#TMP#43=0.000(0.033),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#18=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#4=10.000(1.000),FACLEX#XEME#44=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[28.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#2#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#2=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#10#49=10.000(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[20.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#4#18=10.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#10#49=10.000(0.333),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#2#2=10.000(0.333),FACLEX#LEX#4#18=10.000(0.333),FACLEX#TMP#18=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#49=0.000(0.033),FACLEX#XEME#10=10.000(0.333),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#2=10.000(0.333),FACLEX#XEME#4=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[18.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> surface:e $1)))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[0.000000] the :- EMPTY [{}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >skip[1-1, 2-2], lex[3-3], >apply[1-2, 3-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >skip[0-1, 2-2], <skip[0-0, 1-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#25#29=0.000(1.000),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#25=10.000(1.000),FACLEX#XEME#44=10.000(0.500)}
[18.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> self:e $1)))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[0.000000] the :- EMPTY [{}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], >skip[0-1, 2-2], >skip[1-1, 2-2], <skip[0-0, 1-2], lex[3-3], >apply[0-2, 3-3], >apply[1-2, 3-3], <skip[0-0, 1-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000)}
[18.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 tomato:e)))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[0.000000] the :- EMPTY [{}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >skip[1-1, 2-2], lex[3-3], >apply[1-2, 3-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >skip[0-1, 2-2], <skip[0-0, 1-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000)}
[18.00] S : (lambda $0:t (and:<t*,t> $0 (on:<<e,t>,t> (lambda $1:e (name:<e,<e,t>> $1 cuttingboard:e)))))
	[0.000000] x :- EMPTY [{}]
	[10.000000] on :- S/N : (lambda $0:<e,t> (lambda $1:t (and:<t*,t> $1 (on:<<e,t>,t> (lambda $2:e ($0 $2)))))) [{FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[0.000000] the :- EMPTY [{}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >skip[1-1, 2-2], lex[3-3], >apply[1-2, 3-3], <skip[0-0, 1-3], <skip[0-0, 1-1], >skip[0-1, 2-2], <skip[0-0, 1-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#25#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#25=10.000(1.000)}
[18.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#44#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#44=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#23#27=0.000(0.500),FACLEX#LEX#4#46=0.0(1.000),FACLEX#LEX#44#16=0.0(0.500),FACLEX#TMP#16=0.000(0.050),FACLEX#TMP#27=0.000(0.050),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#4=10.000(1.000),FACLEX#XEME#44=10.000(0.500)}
[18.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#18#33=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], lex[3-3], >apply[2-2, 3-3], <skip[0-1, 2-3], <skip[0-1, 2-2], >apply[0-2, 3-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#33=0.0(1.000),FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#4=10.000(1.000)}
[18.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#18#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], <skip[0-1, 2-2], lex[3-3], >apply[0-2, 3-3], >apply[2-2, 3-3], <skip[0-1, 2-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#22=0.000(1.000),FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#4=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[18.00] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d)))
	[0.000000] x :- EMPTY [{}]
	[0.000000] on :- EMPTY [{}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#4=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#18#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#18=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], <skip[0-0, 1-1], lex[2-2], <skip[0-1, 2-2], lex[3-3], >apply[0-2, 3-3], >apply[2-2, 3-3], <skip[0-1, 2-3]
	Features: {DYNSKIP=-1.000(2.000),FACLEX#LEX#18#42=0.0(1.000),FACLEX#LEX#4#46=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#18=10.000(1.000),FACLEX#XEME#4=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
