[0-0 : very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> very:d) ($0 $2) ($1 $2))))) : prune=20.0 : numParses=3 : numViterbiParses=2 : hash=-1282094323 : 3 : 20.0 : [*[0-0 :: lex :: very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> very:d) ($0 $2) ($1 $2))))){fixed_domain}]{{FACLEX#LEX#20#27=10.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#20=10.000(1.000)} -> 20.0}, *[0-0 :: lex :: very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> very:d) ($0 $2) ($1 $2))))){fixed_domain}]{{FACLEX#LEX#21#28=10.000(1.000),FACLEX#TMP#28=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 20.0}, [0-0 :: lex :: very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> very:d) ($0 $2) ($1 $2))))){fixed_domain}]{{FACLEX#LEX#0#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#0=7.037(1.000)} -> 17.0366376310395}]]
[0-0 : very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) : prune=7.036637631039501 : numParses=1 : numViterbiParses=1 : hash=-1593490830 : 1 : 7.036637631039501 : [*[0-0 :: lex :: very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))){fixed_domain}]{{FACLEX#LEX#0#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#0=7.037(1.000)} -> 7.036637631039501}]]
[0-0 : very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) : prune=7.036637631039501 : numParses=1 : numViterbiParses=1 : hash=-1521396610 : 1 : 7.036637631039501 : [*[0-0 :: lex :: very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))){fixed_domain}]{{FACLEX#LEX#0#16=0.000(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#0=7.037(1.000)} -> 7.036637631039501}]]
[0-0 : very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) : prune=7.036637631039501 : numParses=1 : numViterbiParses=1 : hash=466555646 : 1 : 7.036637631039501 : [*[0-0 :: lex :: very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))){fixed_domain}]{{FACLEX#LEX#0#20=0.0(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#0=7.037(1.000)} -> 7.036637631039501}]]
[0-0 : very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) : prune=7.036637631039501 : numParses=1 : numViterbiParses=1 : hash=543267471 : 1 : 7.036637631039501 : [*[0-0 :: lex :: very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))){fixed_domain}]{{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)} -> 7.036637631039501}]]
[0-0 : very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) : prune=4.053959774422755 : numParses=1 : numViterbiParses=1 : hash=471173251 : 1 : 4.053959774422755 : [*[0-0 :: lex :: very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))){fixed_domain}]{{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)} -> 4.053959774422755}]]
[0-0 : very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=1.9985200435940684 : numParses=3 : numViterbiParses=1 : hash=-953259737 : 3 : 1.9985200435940684 : [*[0-0 :: lex :: very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)} -> 1.9985200435940684}, [0-0 :: lex :: very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#29#6=0.982(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#29=0.982(1.000)} -> 1.9448347726567392}, [0-0 :: lex :: very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#28#17=0.994(1.000),FACLEX#TMP#17=0.100(0.100),FACLEX#XEME#28=0.988(1.000)} -> 1.991981940262847}]]
[0-0 : very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=0.9942538989625825 : numParses=2 : numViterbiParses=1 : hash=-957877342 : 2 : 0.9942538989625825 : [[0-0 :: lex :: very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#29#20=0.0(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#29=0.982(1.000)} -> 0.9823345391474074}, *[0-0 :: lex :: very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#27#30=0.0(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#27=0.994(1.000)} -> 0.9942538989625825}]]
[0-0 : very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=0.9942538989625825 : numParses=3 : numViterbiParses=1 : hash=-881165517 : 3 : 0.9942538989625825 : [[0-0 :: lex :: very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#28#19=0.000(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9880819194950323}, [0-0 :: lex :: very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#29#0=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#29=0.982(1.000)} -> 0.9823345391474074}, *[0-0 :: lex :: very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)} -> 0.9942538989625825}]]
[0-0 : very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=0.9942538989625825 : numParses=3 : numViterbiParses=1 : hash=1277043478 : 3 : 0.9942538989625825 : [[0-0 :: lex :: very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#28#13=0.0(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9880819194950323}, [0-0 :: lex :: very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#29#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#29=0.982(1.000)} -> 0.9823345391474074}, *[0-0 :: lex :: very :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#27#5=0.0(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#27=0.994(1.000)} -> 0.9942538989625825}]]
[0-0 : very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=0.9942538989625825 : numParses=3 : numViterbiParses=1 : hash=1349137698 : 3 : 0.9942538989625825 : [[0-0 :: lex :: very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#29#16=0.000(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#29=0.982(1.000)} -> 0.9823345391474074}, [0-0 :: lex :: very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#28#23=0.0(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9880819194950323}, *[0-0 :: lex :: very :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){genlex}]{{FACLEX#LEX#27#29=0.0(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#27=0.994(1.000)} -> 0.9942538989625825}]]
[0-0 : very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=0.9880819194950323 : numParses=1 : numViterbiParses=1 : hash=1376881478 : 1 : 0.9880819194950323 : [*[0-0 :: lex :: very :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){genlex}]{{FACLEX#LEX#28#8=0.0(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9880819194950323}]]
[0-0 : very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=0.9880819194950323 : numParses=1 : numViterbiParses=1 : hash=1453593303 : 1 : 0.9880819194950323 : [*[0-0 :: lex :: very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){genlex}]{{FACLEX#LEX#28#26=0.0(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9880819194950323}]]
[0-0 : very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=0.9833880222557834 : numParses=1 : numViterbiParses=1 : hash=1381499083 : 1 : 0.9833880222557834 : [*[0-0 :: lex :: very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){genlex}]{{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)} -> 0.9833880222557834}]]
[0-0 : very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))) : prune=0.9823345391474074 : numParses=1 : numViterbiParses=1 : hash=-1576895875 : 1 : 0.9823345391474074 : [*[0-0 :: lex :: very :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) ($1 $2))))){genlex}]{{FACLEX#LEX#29#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#29=0.982(1.000)} -> 0.9823345391474074}]]
[0-1 : very blue :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> very:d) ($0 $2) (desc:<e,<d,t>> $2 blue:d) ($1 $2))))) : prune=40.0 : numParses=9 : numViterbiParses=6 : hash=-867856864 : 1 : 40.0 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1282094323, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 very:d)))) : prune=27.0366376310395 : numParses=5 : numViterbiParses=3 : hash=-1302408207 : 2 : 27.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1593490830, 1376882440]{{} -> 0.0}, [0-1 :: >comp1 :: 0-0, 1-1 :: -1521396610, -683164036]{{} -> 0.0}]]
[0-1 : very blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 very:d)))) : prune=27.0366376310395 : numParses=3 : numViterbiParses=3 : hash=757638269 : 1 : 27.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 466555646, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 very:d)))) : prune=24.053959774422754 : numParses=5 : numViterbiParses=3 : hash=762255874 : 2 : 24.053959774422754 : [[0-1 :: >comp1 :: 0-0, 1-1 :: 543267471, -683164036]{{} -> 0.0}, *[0-1 :: >comp1 :: 0-0, 1-1 :: 471173251, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 blue:d)))) : prune=21.99852004359407 : numParses=16 : numViterbiParses=3 : hash=1706086418 : 3 : 21.99852004359407 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -953259737, 1376882440]{{} -> 0.0}, [0-1 :: >comp1 :: 0-0, 1-1 :: -881165517, -683164036]{{} -> 0.0}, [0-1 :: >comp1 :: 0-0, 1-1 :: 1453593303, 1277044440]{{} -> 0.0}]]
[0-1 : very blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.994253898962583 : numParses=15 : numViterbiParses=3 : hash=-358577663 : 2 : 20.994253898962583 : [[0-1 :: >comp1 :: 0-0, 1-1 :: 1349137698, -683164036]{{} -> 0.0}, *[0-1 :: >comp1 :: 0-0, 1-1 :: 1277043478, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=20.994253898962583 : numParses=6 : numViterbiParses=3 : hash=1701468813 : 1 : 20.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -957877342, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 blue:d)))) : prune=20.98808191949503 : numParses=3 : numViterbiParses=3 : hash=-758108411 : 1 : 20.98808191949503 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1376881478, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 blue:d)))) : prune=20.983388022255784 : numParses=5 : numViterbiParses=3 : hash=-753490806 : 2 : 20.983388022255784 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1381499083, 1376882440]{{} -> 0.0}, [0-1 :: >comp1 :: 0-0, 1-1 :: 1453593303, -683164036]{{} -> 0.0}]]
[0-1 : very blue :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> definite:d) ($0 $2) (desc:<e,<d,t>> $2 blue:d) ($1 $2))))) : prune=20.98233453914741 : numParses=3 : numViterbiParses=3 : hash=-1686402676 : 1 : 20.98233453914741 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1576895875, 1376882440]{{} -> 0.0}]]
[0-1 : very blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=1 : numViterbiParses=1 : hash=-1975659983 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1521396610, 1277044440]{{} -> 0.0}]]
[0-1 : very blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=1 : numViterbiParses=1 : hash=-1903565763 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1521396610, 1349138660]{{} -> 0.0}]]
[0-1 : very blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=2 : numViterbiParses=2 : hash=-1230313987 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -1521396610, -611069816]{{} -> 0.0}]]
[0-1 : very blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=1 : numViterbiParses=1 : hash=89004098 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 543267471, 1277044440]{{} -> 0.0}]]
[0-1 : very blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=1 : numViterbiParses=1 : hash=161098318 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 543267471, 1349138660]{{} -> 0.0}]]
[0-1 : very blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 very:d)))) : prune=17.0366376310395 : numParses=2 : numViterbiParses=2 : hash=834350094 : 1 : 17.0366376310395 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 543267471, -611069816]{{} -> 0.0}]]
[0-1 : very blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.994253898962583 : numParses=3 : numViterbiParses=1 : hash=-1866921011 : 1 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1349137698, 1277044440]{{} -> 0.0}]]
[0-1 : very blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.994253898962583 : numParses=3 : numViterbiParses=1 : hash=-1794826791 : 1 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1349137698, 1349138660]{{} -> 0.0}]]
[0-1 : very blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.994253898962583 : numParses=6 : numViterbiParses=2 : hash=-286483443 : 1 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1349137698, -611069816]{{} -> 0.0}]]
[0-1 : very blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.994253898962583 : numParses=3 : numViterbiParses=1 : hash=197743070 : 1 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -881165517, 1277044440]{{} -> 0.0}]]
[0-1 : very blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.994253898962583 : numParses=3 : numViterbiParses=1 : hash=269837290 : 1 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -881165517, 1349138660]{{} -> 0.0}]]
[0-1 : very blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.994253898962583 : numParses=7 : numViterbiParses=2 : hash=1778180638 : 2 : 10.994253898962583 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: -881165517, -611069816]{{} -> 0.0}, [0-1 :: >comp1 :: 0-0, 1-1 :: 1453593303, 1349138660]{{} -> 0.0}]]
[0-1 : very blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.988081919495032 : numParses=2 : numViterbiParses=2 : hash=-681396586 : 1 : 10.988081919495032 : [*[0-1 :: >comp1 :: 0-0, 1-1 :: 1453593303, -611069816]{{} -> 0.0}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d))) : prune=44.06334827908865 : numParses=15 : numViterbiParses=9 : hash=-584557446 : 2 : 44.06334827908865 : [*[0-2 :: >apply :: 0-0, 1-2 :: 471173251, 793998140]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 543267471, 796323760]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d))) : prune=42.00790854825996 : numParses=48 : numViterbiParses=9 : hash=-927587110 : 3 : 42.00790854825996 : [*[0-2 :: >apply :: 0-0, 1-2 :: -953259737, 793998140]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -1649074876]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: -881165517, 796323760]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d))) : prune=40.97869376992284 : numParses=15 : numViterbiParses=9 : hash=1364257010 : 2 : 40.97869376992284 : [*[0-2 :: >apply :: 0-0, 1-2 :: 1381499083, 793998140]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, 796323760]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d))) : prune=37.0460261357054 : numParses=3 : numViterbiParses=3 : hash=-53035302 : 1 : 37.0460261357054 : [*[0-2 :: >apply :: 0-0, 1-2 :: 543267471, -1649074876]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d))) : prune=34.06334827908865 : numParses=5 : numViterbiParses=3 : hash=-1288349062 : 2 : 34.06334827908865 : [[0-2 :: >apply :: 0-0, 1-2 :: 543267471, 1355290562]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, *[0-2 :: >apply :: 0-0, 1-2 :: 471173251, 1352964942]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d))) : prune=34.06334827908865 : numParses=5 : numViterbiParses=3 : hash=862784762 : 2 : 34.06334827908865 : [*[0-2 :: >apply :: 0-0, 1-2 :: 471173251, -356794882]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 543267471, -354469262]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d))) : prune=34.06334827908865 : numParses=10 : numViterbiParses=6 : hash=1546378234 : 2 : 34.06334827908865 : [*[0-2 :: >apply :: 0-0, 1-2 :: 471173251, -469984132]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 543267471, -467658512]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d))) : prune=34.06334827908865 : numParses=5 : numViterbiParses=3 : hash=1978420378 : 2 : 34.06334827908865 : [*[0-2 :: >apply :: 0-0, 1-2 :: 471173251, 877115030]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 543267471, 879440650]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d))) : prune=32.00790854825996 : numParses=16 : numViterbiParses=3 : hash=-2104358630 : 3 : 32.00790854825996 : [*[0-2 :: >apply :: 0-0, 1-2 :: -953259737, -356794882]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -1998086582]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: -881165517, -354469262]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d))) : prune=32.00790854825996 : numParses=32 : numViterbiParses=6 : hash=-1359837158 : 3 : 32.00790854825996 : [[0-2 :: >apply :: 0-0, 1-2 :: -881165517, -467658512]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, *[0-2 :: >apply :: 0-0, 1-2 :: -953259737, -469984132]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -74493756]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d))) : prune=32.00790854825996 : numParses=16 : numViterbiParses=3 : hash=1316756458 : 3 : 32.00790854825996 : [*[0-2 :: >apply :: 0-0, 1-2 :: -953259737, 1352964942]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: -881165517, 1355290562]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -1308513718]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d))) : prune=32.00790854825996 : numParses=16 : numViterbiParses=3 : hash=1477480714 : 3 : 32.00790854825996 : [*[0-2 :: >apply :: 0-0, 1-2 :: -953259737, 877115030]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, 1430025898]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}, [0-2 :: >apply :: 0-0, 1-2 :: -881165517, 879440650]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d))) : prune=30.98955964662964 : numParses=9 : numViterbiParses=3 : hash=-1397706562 : 1 : 30.98955964662964 : [*[0-2 :: >apply :: 0-0, 1-2 :: -881165517, -1649074876]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d))) : prune=30.978693769922838 : numParses=5 : numViterbiParses=3 : hash=-1219401742 : 2 : 30.978693769922838 : [[0-2 :: >apply :: 0-0, 1-2 :: 1453593303, 1355290562]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}, *[0-2 :: >apply :: 0-0, 1-2 :: 1381499083, 1352964942]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d))) : prune=30.978693769922838 : numParses=10 : numViterbiParses=6 : hash=-31163342 : 2 : 30.978693769922838 : [[0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -467658512]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}, *[0-2 :: >apply :: 0-0, 1-2 :: 1381499083, -469984132]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d))) : prune=30.978693769922838 : numParses=5 : numViterbiParses=3 : hash=812023594 : 2 : 30.978693769922838 : [*[0-2 :: >apply :: 0-0, 1-2 :: 1381499083, 877115030]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}, [0-2 :: >apply :: 0-0, 1-2 :: 1453593303, 879440650]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d))) : prune=30.978693769922838 : numParses=5 : numViterbiParses=3 : hash=1019743410 : 2 : 30.978693769922838 : [[0-2 :: >apply :: 0-0, 1-2 :: 1453593303, -354469262]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}, *[0-2 :: >apply :: 0-0, 1-2 :: 1381499083, -356794882]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d))) : prune=27.046026135705397 : numParses=1 : numViterbiParses=1 : hash=459852506 : 1 : 27.046026135705397 : [*[0-2 :: >apply :: 0-0, 1-2 :: 543267471, -1998086582]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d))) : prune=27.046026135705397 : numParses=1 : numViterbiParses=1 : hash=797802010 : 1 : 27.046026135705397 : [*[0-2 :: >apply :: 0-0, 1-2 :: 543267471, -1308513718]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d))) : prune=27.046026135705397 : numParses=2 : numViterbiParses=2 : hash=1730497114 : 1 : 27.046026135705397 : [*[0-2 :: >apply :: 0-0, 1-2 :: 543267471, -74493756]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d))) : prune=27.046026135705397 : numParses=1 : numViterbiParses=1 : hash=1997264962 : 1 : 27.046026135705397 : [*[0-2 :: >apply :: 0-0, 1-2 :: 543267471, 1430025898]{{LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)} -> 0.009388504665895827}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d))) : prune=20.98955964662964 : numParses=3 : numViterbiParses=1 : hash=-1179037762 : 1 : 20.98955964662964 : [*[0-2 :: >apply :: 0-0, 1-2 :: -881165517, -1308513718]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d))) : prune=20.98955964662964 : numParses=3 : numViterbiParses=1 : hash=-259704898 : 1 : 20.98955964662964 : [*[0-2 :: >apply :: 0-0, 1-2 :: -881165517, -1998086582]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d))) : prune=20.98955964662964 : numParses=3 : numViterbiParses=1 : hash=1497736894 : 1 : 20.98955964662964 : [*[0-2 :: >apply :: 0-0, 1-2 :: -881165517, 1430025898]{{LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[0-2 : very blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d))) : prune=20.98955964662964 : numParses=6 : numViterbiParses=2 : hash=2139957182 : 1 : 20.98955964662964 : [*[0-2 :: >apply :: 0-0, 1-2 :: -881165517, -74493756]{{LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)} -> -0.004694252332943821}]]
[1-1 : blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=20.010034525374376 : numParses=3 : numViterbiParses=1 : hash=1381500045 : 3 : 20.010034525374376 : [[1-1 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#12#12=10.000(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 20.0}, [1-1 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#15#6=10.000(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#15=10.000(1.000)} -> 19.98018795757442}, *[1-1 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#3#24=10.000(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#3=10.000(1.000)} -> 20.010034525374376}]]
[1-1 : blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=1376882440 : 3 : 20.0 : [*[1-1 :: lex :: blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)} -> 20.0}]]
[1-1 : blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=1453594265 : 3 : 20.0 : [*[1-1 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#3#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#3=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#15#0=10.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#15=10.000(1.000)} -> 20.0}, *[1-1 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#12#26=10.000(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 20.0}]]
[1-1 : blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.010030798677382 : numParses=1 : numViterbiParses=1 : hash=-953258775 : 1 : 10.010030798677382 : [*[1-1 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#12#17=0.0(1.000),FACLEX#TMP#17=0.100(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.010030798677382}]]
[1-1 : blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-881164555 : 1 : 10.0 : [*[1-1 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#12#19=0.000(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}]]
[1-1 : blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-683164036 : 2 : 10.0 : [*[1-1 :: lex :: blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#3#5=0.000(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#3=10.000(1.000)} -> 10.0}, *[1-1 :: lex :: blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#15#18=0.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#15=10.000(1.000)} -> 10.0}]]
[1-1 : blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-611069816 : 2 : 10.0 : [*[1-1 :: lex :: blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#3#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#3=10.000(1.000)} -> 10.0}, *[1-1 :: lex :: blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))){fixed_domain}]{{FACLEX#LEX#15#16=0.0(1.000),FACLEX#TMP#16=0.000(0.100),FACLEX#XEME#15=10.000(1.000)} -> 10.0}]]
[1-1 : blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1277044440 : 1 : 10.0 : [*[1-1 :: lex :: blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}]]
[1-1 : blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1349138660 : 1 : 10.0 : [*[1-1 :: lex :: blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))){fixed_domain}]{{FACLEX#LEX#12#23=0.000(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}]]
[1-1 : blue :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> blue:d) ($0 $2) ($1 $2))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1990523455 : 1 : 10.0 : [*[1-1 :: lex :: blue :- S/N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> (desc:<d,t> blue:d) ($0 $2) ($1 $2))))){fixed_domain}]{{FACLEX#LEX#15#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#15=10.000(1.000)} -> 10.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=40.01003452537438 : numParses=9 : numViterbiParses=3 : hash=794002945 : 1 : 40.01003452537438 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1381500045, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=40.0 : numParses=9 : numViterbiParses=9 : hash=793998140 : 1 : 40.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1376882440, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=30.010034525374376 : numParses=6 : numViterbiParses=2 : hash=-469979327 : 1 : 30.010034525374376 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1381500045, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=30.010034525374376 : numParses=3 : numViterbiParses=1 : hash=-356790077 : 1 : 30.010034525374376 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1381500045, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.010034525374376 : numParses=3 : numViterbiParses=1 : hash=877119835 : 1 : 30.010034525374376 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1381500045, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.010034525374376 : numParses=3 : numViterbiParses=1 : hash=1352969747 : 1 : 30.010034525374376 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1381500045, 446347235]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.010030798677384 : numParses=3 : numViterbiParses=3 : hash=-1651395691 : 1 : 30.010030798677384 : [*[1-2 :: >apply :: 1-1, 2-2 :: -953258775, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-1649074876 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1277044440, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=-469984132 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1376882440, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-356794882 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1376882440, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> blue:d) (name:<e,<e,t>> $1 surface:e) ($0 $1)))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-256669430 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1990523455, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=796323760 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: -683164036, -1849530726]{{} -> 0.0}]]
[1-2 : blue surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=877115030 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1376882440, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- N : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=1352964942 : 1 : 30.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1376882440, 446347235]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.010030798677384 : numParses=1 : numViterbiParses=1 : hash=-2000407397 : 1 : 20.010030798677384 : [*[1-2 :: >apply :: 1-1, 2-2 :: -953258775, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.010030798677384 : numParses=1 : numViterbiParses=1 : hash=-1310834533 : 1 : 20.010030798677384 : [*[1-2 :: >apply :: 1-1, 2-2 :: -953258775, 446347235]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.010030798677384 : numParses=2 : numViterbiParses=2 : hash=-76814571 : 1 : 20.010030798677384 : [*[1-2 :: >apply :: 1-1, 2-2 :: -953258775, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.010030798677384 : numParses=1 : numViterbiParses=1 : hash=1427705083 : 1 : 20.010030798677384 : [*[1-2 :: >apply :: 1-1, 2-2 :: -953258775, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1998086582 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1277044440, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1308513718 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1277044440, 446347235]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=4 : numViterbiParses=4 : hash=-467658512 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: -683164036, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-354469262 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: -683164036, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> blue:d) (name:<e,<e,t>> surface:e $1) ($0 $1)))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-327903350 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1990523455, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-74493756 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1277044440, -216455174]{{} -> 0.0}]]
[1-2 : blue surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> blue:d) (name:<e,<e,t>> self:e $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1436216 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1990523455, 210101371]{{} -> 0.0}]]
[1-2 : blue surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> blue:d) (name:<e,<e,t>> $1 tomato:e) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=180707544 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1990523455, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=879440650 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: -683164036, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=1355290562 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: -683164036, 446347235]{{} -> 0.0}]]
[1-2 : blue surface :- NP : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1430025898 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1277044440, 1266360375]{{} -> 0.0}]]
[1-2 : blue surface :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (desc:<d,t> blue:d) (name:<e,<e,t>> $1 cuttingboard:e) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1795657208 : 1 : 20.0 : [*[1-2 :: >apply :: 1-1, 2-2 :: 1990523455, 446347235]{{} -> 0.0}]]
[2-2 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) : prune=20.0 : numParses=3 : numViterbiParses=3 : hash=-1849530726 : 3 : 20.0 : [*[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)} -> 20.0}, *[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)){fixed_domain}]{{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)} -> 20.0}]]
[2-2 : surface :- NP : surface:e : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2015897864 : 1 : 10.0 : [*[2-2 :: lex :: surface :- NP : surface:e{fixed_domain}]{{FACLEX#LEX#16#31=0.0(1.000),FACLEX#TMP#31=0.000(0.100),FACLEX#XEME#16=10.000(1.000)} -> 10.0}]]
[2-2 : surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-216455174 : 2 : 10.0 : [*[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)){fixed_domain}]{{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)} -> 10.0}, *[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)){fixed_domain}]{{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)} -> 10.0}]]
[2-2 : surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=210101371 : 1 : 10.0 : [*[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)){fixed_domain}]{{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)} -> 10.0}]]
[2-2 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=446347235 : 1 : 10.0 : [*[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)){fixed_domain}]{{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)} -> 10.0}]]
[2-2 : surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1266360375 : 1 : 10.0 : [*[2-2 :: lex :: surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)){fixed_domain}]{{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)} -> 10.0}]]
Spans pruned: []

[44.06] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d)))
	[4.053960] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#6=-2.963(1.000),FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#4=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#11=10.000(0.333),FACLEX#LEX#23#2=10.000(0.333),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#11=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#4=0.000(0.033),FACLEX#TMP#6=-0.198(0.100),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[42.01] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d)))
	[1.998520] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#4=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#11=10.000(0.333),FACLEX#LEX#23#2=10.000(0.333),FACLEX#LEX#27#24=0.994(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#11=0.000(0.033),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#24=0.100(0.100),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#4=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#27=0.994(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[40.98] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d)))
	[0.983388] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#4=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#11=10.000(0.333),FACLEX#LEX#23#2=10.000(0.333),FACLEX#LEX#28#12=-0.005(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#11=0.000(0.033),FACLEX#TMP#12=0.000(0.100),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#4=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#28=0.988(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[37.05] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d)))
	[7.036638] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#0=0.000(1.000),FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#4=10.000(0.333),FACLEX#LEX#16#11=10.000(0.333),FACLEX#LEX#23#2=10.000(0.333),FACLEX#TMP#0=0.000(0.100),FACLEX#TMP#11=0.000(0.033),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#4=0.000(0.033),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(0.333),FACLEX#XEME#16=10.000(0.333),FACLEX#XEME#23=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[34.06] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d)))
	[4.053960] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#6=-2.963(1.000),FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#7=0.0(0.500),FACLEX#LEX#23#14=0.0(0.500),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#14=0.000(0.050),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#6=-0.198(0.100),FACLEX#TMP#7=0.000(0.050),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.500),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[34.06] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d)))
	[4.053960] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#6=-2.963(1.000),FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#15=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#15=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#6=-0.198(0.100),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[34.06] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d)))
	[4.053960] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#6=-2.963(1.000),FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#10=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#6=-0.198(0.100),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[34.06] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 very:d)))
	[4.053960] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#6=-2.963(1.000),FACLEX#TMP#6=-0.198(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#6=-2.963(1.000),FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#9=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#6=-0.198(0.100),FACLEX#TMP#8=0.000(0.033),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[32.01] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d)))
	[1.998520] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#7=0.0(0.500),FACLEX#LEX#23#14=0.0(0.500),FACLEX#LEX#27#24=0.994(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#14=0.000(0.050),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#24=0.100(0.100),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#7=0.000(0.050),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.500),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#27=0.994(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[32.01] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d)))
	[1.998520] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#15=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#27#24=0.994(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#15=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#24=0.100(0.100),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#27=0.994(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[32.01] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d)))
	[1.998520] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#10=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#27#24=0.994(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#24=0.100(0.100),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#27=0.994(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[32.01] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 blue:d)))
	[1.998520] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#24=0.994(1.000),FACLEX#TMP#24=0.100(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#9=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#27#24=0.994(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#24=0.100(0.100),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#27=0.994(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[30.99] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 surface:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d)))
	[0.994254] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#16#11=10.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#13#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	[20.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 surface:e)) [{FACLEX#LEX#23#2=10.000(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#4=10.000(0.333),FACLEX#LEX#16#11=10.000(0.333),FACLEX#LEX#23#2=10.000(0.333),FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#11=0.000(0.033),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#2=0.000(0.033),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#4=0.000(0.033),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(0.333),FACLEX#XEME#16=10.000(0.333),FACLEX#XEME#23=10.000(0.333),FACLEX#XEME#27=0.994(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[30.98] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d)))
	[0.983388] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#16#7=0.0(0.500),FACLEX#LEX#23#14=0.0(0.500),FACLEX#LEX#28#12=-0.005(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#12=0.000(0.100),FACLEX#TMP#14=0.000(0.050),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#7=0.000(0.050),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#16=10.000(0.500),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#28=0.988(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[30.98] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d)))
	[0.983388] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#15=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#28#12=-0.005(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#12=0.000(0.100),FACLEX#TMP#15=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#28=0.988(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[30.98] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d)))
	[0.983388] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#10=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#28#12=-0.005(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#12=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#28=0.988(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[30.98] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 blue:d) (desc:<e,<d,t>> $0 blue:d)))
	[0.983388] very :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#28#12=-0.005(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#28=0.988(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#12#8=10.000(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#3#30=10.000(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#3=10.000(1.000)}]
	[20.000000] blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 blue:d)))) [{FACLEX#LEX#15#20=10.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#15=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#8=10.000(0.333),FACLEX#LEX#13#9=0.0(1.000),FACLEX#LEX#15#20=10.000(0.333),FACLEX#LEX#28#12=-0.005(1.000),FACLEX#LEX#3#30=10.000(0.333),FACLEX#TMP#12=0.000(0.100),FACLEX#TMP#20=0.000(0.033),FACLEX#TMP#30=0.000(0.033),FACLEX#TMP#8=0.000(0.033),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#15=10.000(0.333),FACLEX#XEME#28=0.988(1.000),FACLEX#XEME#3=10.000(0.333),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[27.05] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d)))
	[7.036638] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#0=0.000(1.000),FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#16#7=0.0(0.500),FACLEX#LEX#23#14=0.0(0.500),FACLEX#TMP#0=0.000(0.100),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#14=0.000(0.050),FACLEX#TMP#7=0.000(0.050),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#16=10.000(0.500),FACLEX#XEME#23=10.000(0.500),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[27.05] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d)))
	[7.036638] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#0=0.000(1.000),FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000)}
[27.05] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d)))
	[7.036638] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#0=0.000(1.000),FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[27.05] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 very:d)))
	[7.036638] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 very:d)))) [{FACLEX#LEX#0#0=0.000(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#0=7.037(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#0#0=0.000(1.000),FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#0=7.037(1.000),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#desc:<e,<d,t>>#0=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#desc:<e,<d,t>>#desc:<e,<d,t>>=0.005(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000)}
[20.99] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> surface:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d)))
	[0.994254] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#23#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#23=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> surface:e $0)) [{FACLEX#LEX#16#7=0.0(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#16=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#16#7=0.0(0.500),FACLEX#LEX#23#14=0.0(0.500),FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#14=0.000(0.050),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#7=0.000(0.050),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#16=10.000(0.500),FACLEX#XEME#23=10.000(0.500),FACLEX#XEME#27=0.994(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[20.99] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> self:e $0) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d)))
	[0.994254] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> self:e $0)) [{FACLEX#LEX#13#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#15=0.0(1.000),FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#15=0.000(0.100),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#27=0.994(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[20.99] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 tomato:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d)))
	[0.994254] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 tomato:e)) [{FACLEX#LEX#13#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#10=0.0(1.000),FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#27=0.994(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
[20.99] S : (lambda $0:e (and:<t*,t> (name:<e,<e,t>> $0 cuttingboard:e) (desc:<e,<d,t>> $0 definite:d) (desc:<e,<d,t>> $0 definite:d)))
	[0.994254] very :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#27=0.994(1.000)}]
	[10.000000] blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (desc:<e,<d,t>> $1 definite:d)))) [{FACLEX#LEX#12#13=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] surface :- N : (lambda $0:e (name:<e,<e,t>> $0 cuttingboard:e)) [{FACLEX#LEX#13#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#13=10.000(1.000)}]
	Rules: lex[0-0], lex[1-1], lex[2-2], >apply[1-1, 2-2], >apply[0-0, 1-2]
	Features: {FACLEX#LEX#12#13=0.000(1.000),FACLEX#LEX#13#9=0.0(1.000),FACLEX#LEX#27#3=0.000(1.000),FACLEX#TMP#13=0.000(0.100),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#12=10.000(1.000),FACLEX#XEME#13=10.000(1.000),FACLEX#XEME#27=0.994(1.000),LOGEXP#CPP1#and:<t*,t>#name:<e,<e,t>>#desc:<e,<d,t>>=0.0(1.000),LOGEXP#REPT#and:<t*,t>#desc:<e,<d,t>>=-0.005(1.000)}
