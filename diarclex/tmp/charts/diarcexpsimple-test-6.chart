[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=31.435469250725863 : numParses=7 : numViterbiParses=7 : hash=-1116783935 : 7 : 31.435469250725863 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#46#69=21.435(1.000),FACLEX#TMP#69=0.000(0.100),FACLEX#XEME#46=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#50=21.435(1.000),FACLEX#TMP#50=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#6=21.435(1.000),FACLEX#TMP#6=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#63=21.435(1.000),FACLEX#TMP#63=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#41#55=21.435(1.000),FACLEX#TMP#55=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#5=21.435(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#56=21.435(1.000),FACLEX#TMP#56=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 31.435469250725863}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=31.435469250725863 : numParses=7 : numViterbiParses=7 : hash=-1044689715 : 7 : 31.435469250725863 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#38=21.435(1.000),FACLEX#TMP#38=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#46#54=21.435(1.000),FACLEX#TMP#54=0.000(0.100),FACLEX#XEME#46=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#30=21.435(1.000),FACLEX#TMP#30=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#15=21.435(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#41#20=21.435(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#17=21.435(1.000),FACLEX#TMP#17=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#9=21.435(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=31.435469250725863 : numParses=11 : numViterbiParses=11 : hash=-473243746 : 11 : 31.435469250725863 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#7#33=21.435(1.000),FACLEX#TMP#33=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#62=21.435(1.000),FACLEX#TMP#62=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#10#43=21.435(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#40#67=21.435(1.000),FACLEX#TMP#67=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#19=21.435(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#18=21.435(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#25#75=21.435(1.000),FACLEX#TMP#75=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#64=21.435(1.000),FACLEX#TMP#64=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#35#35=21.435(1.000),FACLEX#TMP#35=0.000(0.100),FACLEX#XEME#35=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#11=21.435(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#43#57=21.435(1.000),FACLEX#TMP#57=0.000(0.100),FACLEX#XEME#43=10.000(1.000)} -> 31.435469250725863}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=31.435469250725863 : numParses=11 : numViterbiParses=11 : hash=-401149526 : 11 : 31.435469250725863 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#40#7=21.435(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#12=21.435(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#7#51=21.435(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#35#41=21.435(1.000),FACLEX#TMP#41=0.000(0.100),FACLEX#XEME#35=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#10#8=21.435(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#25#73=21.435(1.000),FACLEX#TMP#73=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#60=21.435(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#43#49=21.435(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#43=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#22=21.435(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#32=21.435(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 31.435469250725863}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#47=21.435(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 31.435469250725863}]]
[0-1 : pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2136372221 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-2136370826 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#7#26=0.000(1.000),FACLEX#TMP#26=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- N : (lambda $0:e (self:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1876229400 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- N : (lambda $0:e (self:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#14#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1814971903 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#24=0.0(1.000),FACLEX#TMP#24=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1742877683 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1411494395 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#78=0.0(1.000),FACLEX#TMP#78=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1411494395 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#24=0.000(1.000),FACLEX#TMP#24=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#27=0.0(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#78=0.0(1.000),FACLEX#TMP#78=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-1357049978 : 2 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#19=0.0(1.000),FACLEX#TMP#19=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#64=0.0(1.000),FACLEX#TMP#64=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1339400175 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#31=0.0(1.000),FACLEX#TMP#31=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1339400175 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#44=0.0(1.000),FACLEX#TMP#44=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#21#31=0.0(1.000),FACLEX#TMP#31=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#14=0.0(1.000),FACLEX#TMP#14=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1327100130 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#11=0.000(1.000),FACLEX#TMP#11=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#36#65=0.0(1.000),FACLEX#TMP#65=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#62=0.0(1.000),FACLEX#TMP#62=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=2 : numViterbiParses=2 : hash=-1284955758 : 2 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#26#32=0.000(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#41#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#41=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1279980026 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=-1255005910 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#12#60=0.0(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#36#66=0.0(1.000),FACLEX#TMP#66=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#6#47=0.0(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1207885806 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#61=0.000(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1171711346 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#45=0.0(1.000),FACLEX#TMP#45=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1116783935 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#50=0.0(1.000),FACLEX#TMP#50=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1099617126 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#37=0.000(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1044689715 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#10#17=0.0(1.000),FACLEX#TMP#17=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-843077832 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-775601217 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#4=0.0(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-770983612 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-751147324 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#70=0.0(1.000),FACLEX#TMP#70=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-488010234 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#21#59=0.0(1.000),FACLEX#TMP#59=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-415916014 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#21#36=0.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=344477634 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#39=0.0(1.000),FACLEX#TMP#39=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=785419554 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#21#43=0.000(1.000),FACLEX#TMP#43=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=857513774 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#21#8=0.0(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#21=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=1054395201 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#12#55=0.0(1.000),FACLEX#TMP#55=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#0=0.0(1.000),FACLEX#TMP#0=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#5=0.000(1.000),FACLEX#TMP#5=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1094323548 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#2=0.0(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=3 : numViterbiParses=3 : hash=1126489421 : 3 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#6#15=0.0(1.000),FACLEX#TMP#15=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#12#20=0.000(1.000),FACLEX#TMP#20=0.000(0.100),FACLEX#XEME#12=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#36#80=0.0(1.000),FACLEX#TMP#80=0.000(0.100),FACLEX#XEME#36=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1297256865 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S/S : (lambda $0:<a,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (conjobj:<a,<<a,t>,t>> $2 (lambda $3:a ($0 $3))) (conjsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#7#29=0.000(1.000),FACLEX#TMP#29=0.000(0.100),FACLEX#XEME#7=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1387225383 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#14#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1459319603 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (self:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#14#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1481330780 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#2=0.0(1.000),FACLEX#TMP#2=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1491389637 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#63=0.0(1.000),FACLEX#TMP#63=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1563483857 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#9=0.0(1.000),FACLEX#TMP#9=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1795937341 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#27=0.000(1.000),FACLEX#TMP#27=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1868031561 : 1 : 10.0 : [*[0-1 :: lex :: pick up :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e ($0 $3))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))){fixed_domain}]{{FACLEX#LEX#26#44=0.0(1.000),FACLEX#TMP#44=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=6 : numViterbiParses=6 : hash=1953700746 : 6 : 10.0 : [*[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#14#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#25#71=0.0(1.000),FACLEX#TMP#71=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#46=0.0(1.000),FACLEX#TMP#46=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#45=0.0(1.000),FACLEX#TMP#45=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#10#59=0.0(1.000),FACLEX#TMP#59=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#40#76=0.000(1.000),FACLEX#TMP#76=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 10.0}]]
[0-1 : pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=6 : numViterbiParses=6 : hash=2025794966 : 6 : 10.0 : [*[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#25#23=0.000(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#25=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#26#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#26=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#10#36=0.0(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#10=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#14#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#14=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#6#61=0.0(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#6=10.000(1.000)} -> 10.0}, *[0-1 :: lex :: pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#40#48=0.000(1.000),FACLEX#TMP#48=0.000(0.100),FACLEX#XEME#40=10.000(1.000)} -> 10.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3))))))) : prune=51.43546925072586 : numParses=22 : numViterbiParses=11 : hash=1659047091 : 2 : 51.43546925072586 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -401149526, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -473243746, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=51.43546925072586 : numParses=14 : numViterbiParses=7 : hash=1978920140 : 2 : 51.43546925072586 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1044689715, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -1116783935, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=41.43546925072586 : numParses=7 : numViterbiParses=7 : hash=985718008 : 1 : 41.43546925072586 : [*[0-2 :: >apply :: 0-1, 2-2 :: -1116783935, 1365022162]{{} -> 0.0}]]
[0-2 : pick up the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3))))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1586952871 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -401149526, -1758833122]{{} -> 0.0}]]
[0-2 : pick up the :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))))) : prune=41.43546925072586 : numParses=11 : numViterbiParses=11 : hash=1805238658 : 1 : 41.43546925072586 : [*[0-2 :: >apply :: 0-1, 2-2 :: -473243746, 1365022162]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=41.43546925072586 : numParses=7 : numViterbiParses=7 : hash=1906825920 : 1 : 41.43546925072586 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1044689715, -1758833122]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-1078949197 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1284955758, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-1068881405 : 2 : 30.0 : [[0-2 :: >comp1 :: 0-1, 2-2 :: -488010234, 373307574]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -415916014, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-924848948 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1742877683, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -1814971903, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=3 : numViterbiParses=3 : hash=-857383120 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1126489421, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-623327675 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 344477634, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-613983561 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 857513774, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: 785419554, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1) (self:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-607361756 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1459319603, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: 1387225383, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-326611005 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -751147324, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=119531523 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1207885806, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -1279980026, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=123518521 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1481330780, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=235796995 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1099617126, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=6 : numViterbiParses=3 : hash=256510796 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1339400175, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -1411494395, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=429391052 : 2 : 30.0 : [[0-2 :: >comp1 :: 0-1, 2-2 :: -1411494395, 373307574]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -1339400175, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=6 : numViterbiParses=3 : hash=692587699 : 2 : 30.0 : [[0-2 :: >comp1 :: 0-1, 2-2 :: -1327100130, 373307574]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -1255005910, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1204263500 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1563483857, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: 1491389637, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1393433420 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -1044689715, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: -1116783935, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1452684720 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: -775601217, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1457302325 : 2 : 30.0 : [[0-2 :: >comp1 :: 0-1, 2-2 :: -843077832, 373307574]{{} -> 0.0}, *[0-2 :: >comp1 :: 0-1, 2-2 :: -770983612, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1556242376 : 2 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1868031561, -1686738902]{{} -> 0.0}, [0-2 :: >comp1 :: 0-1, 2-2 :: 1795937341, 373307574]{{} -> 0.0}]]
[0-2 : pick up the :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1709524401 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 1094323548, -1686738902]{{} -> 0.0}]]
[0-2 : pick up the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (def:<e,t> $3))))))) : prune=30.0 : numParses=6 : numViterbiParses=6 : hash=1998686751 : 1 : 30.0 : [*[0-2 :: >comp1 :: 0-1, 2-2 :: 2025794966, -1686738902]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3))))))) : prune=61.43546925072586 : numParses=44 : numViterbiParses=22 : hash=-1091975264 : 3 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -401149526, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1659047091, -701212744]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -473243746, -1074757625]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (blue:<e,t> $3))))))) : prune=61.43546925072586 : numParses=66 : numViterbiParses=22 : hash=-1019881044 : 4 : 61.43546925072586 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -473243746, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1659047091, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -401149526, 1232257415]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 1586952871, 1430927952]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=61.43546925072586 : numParses=28 : numViterbiParses=14 : hash=-838558135 : 3 : 61.43546925072586 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -1116783935, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1044689715, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1978920140, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=61.43546925072586 : numParses=42 : numViterbiParses=14 : hash=-766463915 : 4 : 61.43546925072586 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1044689715, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1978920140, -629118524]{{} -> 0.0}, [0-3 :: >comp1 :: 0-2, 3-3 :: 1906825920, 1430927952]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1116783935, -1002663405]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=51.43546925072586 : numParses=7 : numViterbiParses=7 : hash=-516598549 : 1 : 51.43546925072586 : [*[0-3 :: >apply :: 0-1, 2-3 :: -1044689715, 1518053514]{{} -> 0.0}]]
[0-3 : pick up the blue :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2)))))) : prune=51.43546925072586 : numParses=11 : numViterbiParses=11 : hash=-211248101 : 1 : 51.43546925072586 : [*[0-3 :: >apply :: 0-1, 2-3 :: -401149526, 1518053514]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=-2110165675 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 1563483857, 1232257415]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: 1491389637, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1204263500, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-1992583900 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 857513774, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: 785419554, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -613983561, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=-1920489680 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: 785419554, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 857513774, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -613983561, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=-1654223282 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 1094323548, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1709524401, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=-1582129062 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 1094323548, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1709524401, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-1456185783 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -1116783935, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1393433420, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1044689715, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (def:<e,t> $1) (self:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-1404760713 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: 1387225383, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -607361756, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1459319603, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=-1384091563 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1393433420, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1044689715, 1232257415]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1116783935, -1002663405]{{} -> 0.0}]]
[0-3 : pick up the blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (self:<e,t> $1)))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=-1332666493 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -607361756, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1459319603, 1232257415]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: 1387225383, -1002663405]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=12 : numViterbiParses=6 : hash=-1279195360 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -1327100130, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 692587699, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1255005910, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=15 : numViterbiParses=6 : hash=-1207101140 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1255005910, 1232257415]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1327100130, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 692587699, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-942596727 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1742877683, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1814971903, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -924848948, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=-870502507 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -1814971903, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1742877683, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -924848948, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=4 : hash=307234696 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -1078949197, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1284955758, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=379328916 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -1078949197, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1284955758, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=414934461 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1556242376, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1868031561, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: 1795937341, -1074757625]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=487028681 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: 1795937341, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1556242376, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1868031561, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (blue:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=655285763 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1452684720, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -775601217, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (blue:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=659903368 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1457302325, -701212744]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -843077832, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -770983612, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) ($0 $1)))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=727379983 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1452684720, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -775601217, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) ($0 $1)))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=731997588 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -770983612, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1457302325, -629118524]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -843077832, -1002663405]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=833246394 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -623327675, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 344477634, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=905340614 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 344477634, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -623327675, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=1070476118 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 123518521, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1481330780, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=1142570338 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 123518521, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1481330780, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=1216591936 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -326611005, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -751147324, 1160163195]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=1243870728 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1207885806, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1279980026, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 119531523, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=1274068105 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1339400175, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1411494395, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 429391052, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=1288686156 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -751147324, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -326611005, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=1315964948 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1207885806, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 119531523, -629118524]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1279980026, -1002663405]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=1346162325 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 429391052, -629118524]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1411494395, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1339400175, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=1398121104 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -1099617126, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 235796995, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3))))))) : prune=40.0 : numParses=3 : numViterbiParses=2 : hash=1470215324 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 235796995, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1099617126, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=1679689224 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: -415916014, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -488010234, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -1068881405, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=12 : numViterbiParses=6 : hash=1690369161 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 256510796, -701212744]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1339400175, 1160163195]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -1411494395, -1074757625]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3))))))) : prune=40.0 : numParses=5 : numViterbiParses=2 : hash=1751783444 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: -1068881405, -629118524]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: -488010234, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -415916014, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=15 : numViterbiParses=6 : hash=1762463381 : 3 : 40.0 : [[0-3 :: >comp1 :: 0-1, 2-3 :: -1411494395, -1002663405]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 256510796, -629118524]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: -1339400175, 1232257415]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3))))))) : prune=40.0 : numParses=12 : numViterbiParses=12 : hash=1851461268 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 2025794966, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1998686751, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3))))))) : prune=40.0 : numParses=18 : numViterbiParses=12 : hash=1923555488 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 2025794966, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: 1998686751, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3) (def:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=6 : numViterbiParses=6 : hash=1976910277 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 1126489421, 1160163195]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -857383120, -701212744]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=9 : numViterbiParses=6 : hash=2049004497 : 2 : 40.0 : [*[0-3 :: >comp1 :: 0-1, 2-3 :: 1126489421, 1232257415]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-2, 3-3 :: -857383120, -629118524]{{} -> 0.0}]]
[0-3 : pick up the blue :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=2112707401 : 3 : 40.0 : [*[0-3 :: >comp1 :: 0-2, 3-3 :: 1204263500, -701212744]{{} -> 0.0}, [0-3 :: >comp1 :: 0-1, 2-3 :: 1491389637, -1074757625]{{} -> 0.0}, *[0-3 :: >comp1 :: 0-1, 2-3 :: 1563483857, 1160163195]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=81.43546925072586 : numParses=105 : numViterbiParses=35 : hash=593366054 : 5 : 81.43546925072586 : [[0-4 :: >comp1 :: 0-2, 3-4 :: 1906825920, 1721037763]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1116783935, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -766463915, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1044689715, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1978920140, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=81.43546925072586 : numParses=175 : numViterbiParses=35 : hash=665460274 : 6 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 1978920140, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1044689715, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1116783935, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -838558135, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1906825920, 1793131983]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -766463915, -927502170]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3))))))) : prune=81.43546925072586 : numParses=165 : numViterbiParses=55 : hash=1443618417 : 5 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -401149526, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1586952871, 1721037763]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1019881044, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1659047091, -339008713]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -473243746, -798138862]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3))))))) : prune=81.43546925072586 : numParses=275 : numViterbiParses=55 : hash=1515712637 : 6 : 81.43546925072586 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 1659047091, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -1019881044, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -473243746, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -401149526, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-2, 3-4 :: 1586952871, 1793131983]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1091975264, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (and:<t*,t> (blue:<e,t> $2) (mod:<e,t> $2) (def:<e,t> $2)))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=71.43546925072586 : numParses=14 : numViterbiParses=7 : hash=-1177797640 : 2 : 71.43546925072586 : [*[0-4 :: >apply :: 0-1, 2-4 :: -1044689715, 1127538061]{{} -> 0.0}, [0-4 :: >apply :: 0-1, 2-4 :: -1116783935, 1125212441]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2)))))) : prune=71.43546925072586 : numParses=22 : numViterbiParses=11 : hash=-1139541612 : 2 : 71.43546925072586 : [[0-4 :: >apply :: 0-1, 2-4 :: -473243746, 1125212441]{{} -> 0.0}, *[0-4 :: >apply :: 0-1, 2-4 :: -401149526, 1127538061]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-1638331364 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -775601217, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 727379983, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1452684720, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-1633713759 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: -843077832, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1457302325, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 731997588, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -770983612, 1436781958]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=39 : numViterbiParses=15 : hash=-1570558214 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1339400175, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1411494395, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 256510796, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1762463381, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-1566237144 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 1452684720, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 655285763, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -775601217, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 727379983, -927502170]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=-1561619539 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -770983612, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 731997588, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -843077832, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 659903368, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1457302325, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=69 : numViterbiParses=15 : hash=-1498463994 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1339400175, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1762463381, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 256510796, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1411494395, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1690369161, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3))))))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-1428841611 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 235796995, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1099617126, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1470215324, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-1356747391 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1099617126, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1398121104, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 235796995, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1470215324, -927502170]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=16 : numViterbiParses=10 : hash=-924882315 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -1078949197, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1284955758, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 379328916, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-922179838 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: -870502507, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1814971903, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -924848948, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1742877683, 1436781958]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=26 : numViterbiParses=10 : hash=-852788095 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-3, 4-4 :: 379328916, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1284955758, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 307234696, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -1078949197, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=-850085618 : 5 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: -1814971903, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -924848948, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -870502507, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1742877683, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -942596727, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-841175431 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -751147324, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1288686156, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -326611005, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-769081211 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-3, 4-4 :: 1288686156, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -326611005, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -751147324, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1216591936, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-730848791 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -1068881405, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -415916014, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -488010234, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1751783444, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=-658754571 : 5 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: -488010234, -726044642]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1751783444, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -415916014, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1679689224, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -1068881405, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-620613937 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 1709524401, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1094323548, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1582129062, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-573424470 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 1563483857, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1204263500, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -2110165675, -999596390]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 1491389637, -798138862]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-548519717 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-3, 4-4 :: -1582129062, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1709524401, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1654223282, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1094323548, 1508876178]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=-501330250 : 5 : 60.0 : [[0-4 :: >comp1 :: 0-3, 4-4 :: -2110165675, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1563483857, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 2112707401, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 1491389637, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1204263500, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-453421745 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: 905340614, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 344477634, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -623327675, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (pickup:<a,t> $2) (prepobj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-381327525 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -623327675, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 833246394, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 905340614, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 344477634, 1508876178]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/N : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=8 : numViterbiParses=5 : hash=-217959217 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 123518521, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1481330780, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1142570338, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\S/NP : (lambda $0:<e,t> (lambda $1:<a,t> (lambda $2:a (and:<t*,t> (by:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (prepsubj:<a,<<a,t>,t>> $2 (lambda $4:a ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=-145864997 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 123518521, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1142570338, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1481330780, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1070476118, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1) (self:<e,t> $1)))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=596589456 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: -607361756, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1459319603, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 1387225383, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1332666493, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3))))))) : prune=60.0 : numParses=48 : numViterbiParses=30 : hash=622583409 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 2025794966, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1998686751, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1923555488, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=24 : numViterbiParses=15 : hash=634234034 : 3 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 1126489421, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -857383120, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 2049004497, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1) (self:<e,t> $1)))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=668683676 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: -1404760713, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 1387225383, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -607361756, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -1332666493, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1459319603, 1508876178]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=60.0 : numParses=78 : numViterbiParses=30 : hash=694677629 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 2025794966, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1923555488, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1998686751, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1851461268, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=39 : numViterbiParses=15 : hash=706328254 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-3, 4-4 :: 1976910277, 1132544306]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1126489421, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 2049004497, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -857383120, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=941503666 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: -1116783935, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1384091563, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1044689715, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1393433420, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=1013597886 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1044689715, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1393433420, -266914493]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1116783935, -726044642]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -1384091563, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1456185783, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=39 : numViterbiParses=15 : hash=1539928553 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1255005910, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1327100130, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1207101140, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 692587699, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=69 : numViterbiParses=15 : hash=1612022773 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: -1255005910, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1279195360, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -1207101140, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1327100130, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 692587699, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=1616527098 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 1868031561, 1436781958]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 1795937341, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 487028681, -999596390]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1556242376, -339008713]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (obj:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=1688621318 : 5 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: 1795937341, -726044642]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 487028681, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 1556242376, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 1868031561, 1508876178]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 414934461, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=1702896105 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: 785419554, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -613983561, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: 857513774, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1920489680, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=1774990325 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-1, 2-4 :: 857513774, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: -1920489680, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: -1992583900, 1132544306]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: 785419554, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: -613983561, -266914493]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/N : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=1937210750 : 4 : 60.0 : [[0-4 :: >comp1 :: 0-1, 2-4 :: -1411494395, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1339400175, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 429391052, -339008713]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1346162325, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S\N/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:a (and:<t*,t> (throw:<a,t> $2) (actor:<a,<<e,t>,t>> $2 (lambda $3:e (and:<t*,t> (def:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (obj:<a,<<e,t>,t>> $2 (lambda $4:e ($1 $4))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=2009304970 : 5 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 429391052, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1339400175, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-3, 4-4 :: 1346162325, -927502170]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1411494395, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1274068105, 1132544306]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) (mod:<e,t> $3) ($0 $3))))))) : prune=60.0 : numParses=13 : numViterbiParses=5 : hash=2055138777 : 4 : 60.0 : [*[0-4 :: >comp1 :: 0-2, 3-4 :: 119531523, -339008713]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1279980026, -798138862]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1207885806, 1436781958]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1315964948, -999596390]{{} -> 0.0}]]
[0-4 : pick up the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (def:<e,t> $3) (blue:<e,t> $3) ($0 $3) (mod:<e,t> $3))))))) : prune=60.0 : numParses=23 : numViterbiParses=5 : hash=2127232997 : 5 : 60.0 : [[0-4 :: >comp1 :: 0-3, 4-4 :: 1315964948, -927502170]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-1, 2-4 :: -1207885806, 1508876178]{{} -> 0.0}, [0-4 :: >comp1 :: 0-1, 2-4 :: -1279980026, -726044642]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-2, 3-4 :: 119531523, -266914493]{{} -> 0.0}, *[0-4 :: >comp1 :: 0-3, 4-4 :: 1243870728, 1132544306]{{} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))))) : prune=101.43546925072586 : numParses=33 : numViterbiParses=11 : hash=1818423285 : 2 : 101.43546925072586 : [[0-5 :: >apply :: 0-1, 2-5 :: -473243746, 2047679658]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, *[0-5 :: >apply :: 0-1, 2-5 :: -401149526, 2050005278]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:e (and:<t*,t> (self:<e,t> $0) (def:<e,t> $0) (blue:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=80.0 : numParses=3 : numViterbiParses=1 : hash=-1920695955 : 2 : 80.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: -770983612, 2050005278]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)} -> 0.0}, [0-5 :: >apply :: 0-1, 2-5 :: -843077832, 2047679658]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $0))) : prune=80.0 : numParses=6 : numViterbiParses=2 : hash=-1106111759 : 2 : 80.0 : [[0-5 :: >apply :: 0-1, 2-5 :: -1357049978, 2047679658]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, *[0-5 :: >apply :: 0-1, 2-5 :: -1284955758, 2050005278]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))))) : prune=80.0 : numParses=18 : numViterbiParses=6 : hash=-752299979 : 2 : 80.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: 2025794966, 2050005278]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, [0-5 :: >apply :: 0-1, 2-5 :: 1953700746, 2047679658]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))))) : prune=80.0 : numParses=3 : numViterbiParses=1 : hash=-706334835 : 2 : 80.0 : [[0-5 :: >apply :: 0-1, 2-5 :: -1279980026, 2047679658]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, *[0-5 :: >apply :: 0-1, 2-5 :: -1207885806, 2050005278]{{LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0))) : prune=80.0 : numParses=9 : numViterbiParses=3 : hash=-214984195 : 2 : 80.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: -1255005910, 2050005278]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, [0-5 :: >apply :: 0-1, 2-5 :: -1327100130, 2047679658]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))))) : prune=80.0 : numParses=3 : numViterbiParses=1 : hash=396135869 : 2 : 80.0 : [[0-5 :: >apply :: 0-1, 2-5 :: -488010234, 2047679658]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, *[0-5 :: >apply :: 0-1, 2-5 :: -415916014, 2050005278]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))))) : prune=80.0 : numParses=3 : numViterbiParses=1 : hash=1216230065 : 2 : 80.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: -1099617126, 2050005278]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, [0-5 :: >apply :: 0-1, 2-5 :: -1171711346, 2047679658]{{LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $0))) : prune=80.0 : numParses=3 : numViterbiParses=1 : hash=2002169213 : 2 : 80.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: 857513774, 2050005278]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}, [0-5 :: >apply :: 0-1, 2-5 :: 785419554, 2047679658]{{LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (pickup:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=2 : hash=-1533051791 : 1 : 70.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: -2136372221, 1564129763]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[0-5 : pick up the blue mod obj :- S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (pickup:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (blue:<e,t> $3)))))) : prune=70.0 : numParses=2 : numViterbiParses=2 : hash=1417621733 : 1 : 70.0 : [*[0-5 :: >apply :: 0-1, 2-5 :: -2136372221, 1295916127]{{LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)} -> 0.0}]]
[2-2 : the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1686738902 : 1 : 20.0 : [*[2-2 :: lex :: the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[2-2 : the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=305830959 : 1 : 20.0 : [*[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[2-2 : the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=377925179 : 1 : 20.0 : [*[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 20.0}]]
[2-2 : the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1758833122 : 1 : 10.0 : [*[2-2 :: lex :: the :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1192058365 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#24#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1119964145 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#24#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=373307574 : 1 : 10.0 : [*[2-2 :: lex :: the :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#24#4=0.0(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=473362439 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=545456659 : 1 : 10.0 : [*[2-2 :: lex :: the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#24#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-2 : the :- N : (lambda $0:e (def:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1365022162 : 1 : 10.0 : [*[2-2 :: lex :: the :- N : (lambda $0:e (def:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#24#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#24=10.000(1.000)} -> 10.0}]]
[2-3 : the blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1070140020 : 1 : 30.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 377925179, -701212744]{{} -> 0.0}]]
[2-3 : the blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (blue:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-998045800 : 2 : 30.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 305830959, 1430927952]{{} -> 0.0}, *[2-3 :: >comp1 :: 2-2, 3-3 :: 377925179, -629118524]{{} -> 0.0}]]
[2-3 : the blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (def:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1160163195 : 1 : 30.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: -1686738902, -701212744]{{} -> 0.0}]]
[2-3 : the blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1232257415 : 2 : 30.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: -1686738902, -629118524]{{} -> 0.0}, [2-3 :: >comp1 :: 2-2, 3-3 :: -1758833122, 1430927952]{{} -> 0.0}]]
[2-3 : the blue :- S : (lambda $0:e (and:<t*,t> (blue:<e,t> $0) (def:<e,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1515732699 : 1 : 30.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 305830959, 924056799]{{} -> 0.0}]]
[2-3 : the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1812330566 : 1 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 545456659, -701212744]{{} -> 0.0}]]
[2-3 : the blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (blue:<e,t> $3) ($0 $3))))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1796079798 : 1 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: -1119964145, -701212744]{{} -> 0.0}]]
[2-3 : the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-1740236346 : 2 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 545456659, -629118524]{{} -> 0.0}, *[2-3 :: >comp1 :: 2-2, 3-3 :: 473362439, 1430927952]{{} -> 0.0}]]
[2-3 : the blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (blue:<e,t> $3))))))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-1723985578 : 2 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: -1192058365, 1430927952]{{} -> 0.0}, *[2-3 :: >comp1 :: 2-2, 3-3 :: -1119964145, -629118524]{{} -> 0.0}]]
[2-3 : the blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1074757625 : 1 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 373307574, -701212744]{{} -> 0.0}]]
[2-3 : the blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (blue:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1002663405 : 1 : 20.0 : [*[2-3 :: >comp1 :: 2-2, 3-3 :: 373307574, -629118524]{{} -> 0.0}]]
[2-3 : the blue :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (blue:<e,t> $2))) (pickup:<a,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=136592669 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: 473362439, 924056799]{{} -> 0.0}]]
[2-3 : the blue :- NP : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (blue:<e,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1518053514 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1758833122, 924056799]{{} -> 0.0}]]
[2-3 : the blue :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (blue:<e,t> $2))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1642732381 : 1 : 20.0 : [*[2-3 :: >apply :: 2-2, 3-3 :: -1192058365, 924056799]{{} -> 0.0}]]
[2-4 : the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1) (blue:<e,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=4 : hash=-793521257 : 3 : 50.0 : [*[2-4 :: >comp1 :: 2-3, 4-4 :: -998045800, -999596390]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 377925179, -339008713]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 305830959, 1721037763]{{} -> 0.0}]]
[2-4 : the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=2 : hash=-721427037 : 4 : 50.0 : [[2-4 :: >comp1 :: 2-2, 3-4 :: 305830959, 1793131983]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-3, 4-4 :: -1070140020, 1132544306]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 377925179, -266914493]{{} -> 0.0}, [2-4 :: >comp1 :: 2-3, 4-4 :: -998045800, -927502170]{{} -> 0.0}]]
[2-4 : the blue mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=1436781958 : 3 : 50.0 : [[2-4 :: >comp1 :: 2-2, 3-4 :: -1758833122, 1721037763]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: -1686738902, -339008713]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-3, 4-4 :: 1232257415, -999596390]{{} -> 0.0}]]
[2-4 : the blue mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=2 : hash=1508876178 : 4 : 50.0 : [[2-4 :: >comp1 :: 2-3, 4-4 :: 1232257415, -927502170]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: -1686738902, -266914493]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-3, 4-4 :: 1160163195, 1132544306]{{} -> 0.0}, [2-4 :: >comp1 :: 2-2, 3-4 :: -1758833122, 1793131983]{{} -> 0.0}]]
[2-4 : the blue mod :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (mod:<e,t> $1) ($0 $1) (blue:<e,t> $1)))) : prune=40.0 : numParses=2 : numViterbiParses=2 : hash=-798138862 : 2 : 40.0 : [*[2-4 :: >comp1 :: 2-3, 4-4 :: -1002663405, -999596390]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 373307574, -339008713]{{} -> 0.0}]]
[2-4 : the blue mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-726044642 : 3 : 40.0 : [*[2-4 :: >comp1 :: 2-3, 4-4 :: -1074757625, 1132544306]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 373307574, -266914493]{{} -> 0.0}, [2-4 :: >comp1 :: 2-3, 4-4 :: -1002663405, -927502170]{{} -> 0.0}]]
[2-4 : the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3))))))) : prune=40.0 : numParses=4 : numViterbiParses=4 : hash=-367763117 : 3 : 40.0 : [*[2-4 :: >comp1 :: 2-2, 3-4 :: -1119964145, -339008713]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: -1192058365, 1721037763]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-3, 4-4 :: -1723985578, -999596390]{{} -> 0.0}]]
[2-4 : the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3))))))) : prune=40.0 : numParses=6 : numViterbiParses=2 : hash=-295668897 : 4 : 40.0 : [[2-4 :: >comp1 :: 2-3, 4-4 :: -1723985578, -927502170]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: -1119964145, -266914493]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-3, 4-4 :: -1796079798, 1132544306]{{} -> 0.0}, [2-4 :: >comp1 :: 2-2, 3-4 :: -1192058365, 1793131983]{{} -> 0.0}]]
[2-4 : the blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=4 : hash=-224966329 : 3 : 40.0 : [*[2-4 :: >comp1 :: 2-3, 4-4 :: -1740236346, -999596390]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 545456659, -339008713]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 473362439, 1721037763]{{} -> 0.0}]]
[2-4 : the blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=6 : numViterbiParses=2 : hash=-152872109 : 4 : 40.0 : [*[2-4 :: >comp1 :: 2-3, 4-4 :: -1812330566, 1132544306]{{} -> 0.0}, [2-4 :: >comp1 :: 2-2, 3-4 :: 473362439, 1793131983]{{} -> 0.0}, *[2-4 :: >comp1 :: 2-2, 3-4 :: 545456659, -266914493]{{} -> 0.0}, [2-4 :: >comp1 :: 2-3, 4-4 :: -1740236346, -927502170]{{} -> 0.0}]]
[2-4 : the blue mod :- S : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (blue:<e,t> $0) (mod:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=1125217246 : 1 : 40.0 : [*[2-4 :: >apply :: 2-2, 3-4 :: 377925179, 1661911370]{{} -> 0.0}]]
[2-4 : the blue mod :- NP : (lambda $0:e (and:<t*,t> (blue:<e,t> $0) (mod:<e,t> $0) (def:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=1127538061 : 1 : 40.0 : [*[2-4 :: >apply :: 2-2, 3-4 :: -1686738902, 1661911370]{{} -> 0.0}]]
[2-4 : the blue mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (blue:<e,t> $2) (mod:<e,t> $2)))) (pickup:<a,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-2038155038 : 1 : 30.0 : [*[2-4 :: >apply :: 2-2, 3-4 :: 545456659, 1661911370]{{} -> 0.0}]]
[2-4 : the blue mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (blue:<e,t> $2) (mod:<e,t> $2)))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=606046558 : 1 : 30.0 : [*[2-4 :: >apply :: 2-2, 3-4 :: -1119964145, 1661911370]{{} -> 0.0}]]
[2-4 : the blue mod :- N : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (blue:<e,t> $0) (mod:<e,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1125212441 : 1 : 30.0 : [*[2-4 :: >apply :: 2-2, 3-4 :: 373307574, 1661911370]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0) (blue:<e,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=2 : hash=2047684463 : 2 : 70.0 : [*[2-5 :: >apply :: 2-2, 3-5 :: 305830959, -190608553]{{} -> 0.0}, *[2-5 :: >apply :: 2-2, 3-5 :: 377925179, -188282933]{{} -> 0.0}]]
[2-5 : the blue mod obj :- NP : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (blue:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=70.0 : numParses=2 : numViterbiParses=1 : hash=2050005278 : 2 : 70.0 : [*[2-5 :: >apply :: 2-2, 3-5 :: -1686738902, -188282933]{{} -> 0.0}, [2-5 :: >apply :: 2-2, 3-5 :: -1758833122, -190608553]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=60.0 : numParses=15 : numViterbiParses=5 : hash=-1797634760 : 5 : 60.0 : [*[2-5 :: >comp1 :: 2-4, 5-5 :: -721427037, 1264383304]{{} -> 0.0}, [2-5 :: >comp1 :: 2-2, 3-5 :: 305830959, -487227788]{{} -> 0.0}, [2-5 :: >comp1 :: 2-3, 4-5 :: -998045800, -567436213]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 377925179, 1747693032]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1070140020, 1492610263]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=60.0 : numParses=25 : numViterbiParses=15 : hash=-1725540540 : 6 : 60.0 : [*[2-5 :: >comp1 :: 2-4, 5-5 :: -793521257, -898443296]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 377925179, 1819787252]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 305830959, -415133568]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -721427037, 1336477524]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1070140020, 1564704483]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -998045800, -495341993]{{} -> 0.0}]]
[2-5 : the blue mod obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=60.0 : numParses=15 : numViterbiParses=5 : hash=432668455 : 5 : 60.0 : [[2-5 :: >comp1 :: 2-3, 4-5 :: 1232257415, -567436213]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: -1686738902, 1747693032]{{} -> 0.0}, [2-5 :: >comp1 :: 2-2, 3-5 :: -1758833122, -487227788]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: 1160163195, 1492610263]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: 1508876178, 1264383304]{{} -> 0.0}]]
[2-5 : the blue mod obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (blue:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=60.0 : numParses=25 : numViterbiParses=10 : hash=504762675 : 6 : 60.0 : [*[2-5 :: >comp1 :: 2-3, 4-5 :: 1160163195, 1564704483]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: 1508876178, 1336477524]{{} -> 0.0}, [2-5 :: >comp1 :: 2-2, 3-5 :: -1758833122, -415133568]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: -1686738902, 1819787252]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: 1232257415, -495341993]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: 1436781958, -898443296]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))))) : prune=60.0 : numParses=2 : numViterbiParses=2 : hash=1295916127 : 2 : 60.0 : [*[2-5 :: >apply :: 2-2, 3-5 :: -1119964145, -188282933]{{} -> 0.0}, *[2-5 :: >apply :: 2-2, 3-5 :: -1192058365, -190608553]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (def:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $0))) : prune=60.0 : numParses=2 : numViterbiParses=2 : hash=1564129763 : 2 : 60.0 : [*[2-5 :: >apply :: 2-2, 3-5 :: 473362439, -190608553]{{} -> 0.0}, *[2-5 :: >apply :: 2-2, 3-5 :: 545456659, -188282933]{{} -> 0.0}]]
[2-5 : the blue mod obj :- N : (lambda $0:e (and:<t*,t> (def:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0) (blue:<e,t> $0))) : prune=60.0 : numParses=1 : numViterbiParses=1 : hash=2047679658 : 1 : 60.0 : [*[2-5 :: >apply :: 2-2, 3-5 :: 373307574, -188282933]{{} -> 0.0}]]
[2-5 : the blue mod obj :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=50.0 : numParses=10 : numViterbiParses=5 : hash=-1802252365 : 4 : 50.0 : [*[2-5 :: >comp1 :: 2-2, 3-5 :: 373307574, 1747693032]{{} -> 0.0}, [2-5 :: >comp1 :: 2-3, 4-5 :: -1002663405, -567436213]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1074757625, 1492610263]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -726044642, 1264383304]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3))))))) : prune=50.0 : numParses=15 : numViterbiParses=5 : hash=-1739504300 : 5 : 50.0 : [[2-5 :: >comp1 :: 2-3, 4-5 :: -1723985578, -567436213]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: -1119964145, 1747693032]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1796079798, 1492610263]{{} -> 0.0}, [2-5 :: >comp1 :: 2-2, 3-5 :: -1192058365, -487227788]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -295668897, 1264383304]{{} -> 0.0}]]
[2-5 : the blue mod obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (def:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=50.0 : numParses=15 : numViterbiParses=10 : hash=-1730158145 : 5 : 50.0 : [*[2-5 :: >comp1 :: 2-4, 5-5 :: -798138862, -898443296]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1002663405, -495341993]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 373307574, 1819787252]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1074757625, 1564704483]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -726044642, 1336477524]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3) (blue:<e,t> $3))))))) : prune=50.0 : numParses=25 : numViterbiParses=15 : hash=-1667410080 : 6 : 50.0 : [*[2-5 :: >comp1 :: 2-2, 3-5 :: -1192058365, -415133568]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -295668897, 1336477524]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1796079798, 1564704483]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1723985578, -495341993]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -367763117, -898443296]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: -1119964145, 1819787252]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=15 : numViterbiParses=5 : hash=524714152 : 5 : 50.0 : [[2-5 :: >comp1 :: 2-3, 4-5 :: -1740236346, -567436213]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 545456659, 1747693032]{{} -> 0.0}, [2-5 :: >comp1 :: 2-2, 3-5 :: 473362439, -487227788]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1812330566, 1492610263]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -152872109, 1264383304]{{} -> 0.0}]]
[2-5 : the blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=50.0 : numParses=25 : numViterbiParses=15 : hash=596808372 : 6 : 50.0 : [*[2-5 :: >comp1 :: 2-4, 5-5 :: -152872109, 1336477524]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 545456659, 1819787252]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1740236346, -495341993]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-4, 5-5 :: -224966329, -898443296]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-2, 3-5 :: 473362439, -415133568]{{} -> 0.0}, *[2-5 :: >comp1 :: 2-3, 4-5 :: -1812330566, 1564704483]{{} -> 0.0}]]
[3-3 : blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1363451337 : 1 : 20.0 : [*[3-3 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#54#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 20.0}]]
[3-3 : blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1435545557 : 1 : 20.0 : [*[3-3 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#54#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 20.0}]]
[3-3 : blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-701212744 : 1 : 10.0 : [*[3-3 :: lex :: blue :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#54#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-629118524 : 1 : 10.0 : [*[3-3 :: lex :: blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-78030389 : 1 : 10.0 : [*[3-3 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#54#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-5936169 : 1 : 10.0 : [*[3-3 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#54#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- N : (lambda $0:e (blue:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=924056799 : 1 : 10.0 : [*[3-3 :: lex :: blue :- N : (lambda $0:e (blue:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#54#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1344018763 : 1 : 10.0 : [*[3-3 :: lex :: blue :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#54#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1416112983 : 1 : 10.0 : [*[3-3 :: lex :: blue :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#54#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-3 : blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1430927952 : 1 : 10.0 : [*[3-3 :: lex :: blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#54#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#54=10.000(1.000)} -> 10.0}]]
[3-4 : blue mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=1725655368 : 1 : 40.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 1435545557, -999596390]{{} -> 0.0}]]
[3-4 : blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=40.0 : numParses=2 : numViterbiParses=1 : hash=1797749588 : 2 : 40.0 : [[3-4 :: >comp1 :: 3-3, 4-4 :: 1435545557, -927502170]{{} -> 0.0}, *[3-4 :: >comp1 :: 3-3, 4-4 :: 1363451337, 1132544306]{{} -> 0.0}]]
[3-4 : blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1620004916 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -5936169, -999596390]{{} -> 0.0}]]
[3-4 : blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-1547910696 : 2 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -78030389, 1132544306]{{} -> 0.0}, [3-4 :: >comp1 :: 3-3, 4-4 :: -5936169, -927502170]{{} -> 0.0}]]
[3-4 : blue mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (blue:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-339008713 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: -629118524, -999596390]{{} -> 0.0}]]
[3-4 : blue mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-266914493 : 2 : 30.0 : [[3-4 :: >comp1 :: 3-3, 4-4 :: -629118524, -927502170]{{} -> 0.0}, *[3-4 :: >comp1 :: 3-3, 4-4 :: -701212744, 1132544306]{{} -> 0.0}]]
[3-4 : blue mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3))))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=957561356 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 1416112983, -999596390]{{} -> 0.0}]]
[3-4 : blue mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3))))))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=1029655576 : 2 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 1344018763, 1132544306]{{} -> 0.0}, [3-4 :: >comp1 :: 3-3, 4-4 :: 1416112983, -927502170]{{} -> 0.0}]]
[3-4 : blue mod :- S : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (blue:<e,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1659590555 : 1 : 30.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: 1363451337, 2130151161]{{} -> 0.0}]]
[3-4 : blue mod :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) (mod:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1721037763 : 1 : 30.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 1430927952, -999596390]{{} -> 0.0}]]
[3-4 : blue mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (blue:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (mod:<e,t> $2))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=115459359 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: 1344018763, 2130151161]{{} -> 0.0}]]
[3-4 : blue mod :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (blue:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (mod:<e,t> $2))) (pickup:<a,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1114580575 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: -78030389, 2130151161]{{} -> 0.0}]]
[3-4 : blue mod :- NP : (lambda $0:e (and:<t*,t> (blue:<e,t> $0) (mod:<e,t> $0))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1661911370 : 1 : 20.0 : [*[3-4 :: >apply :: 3-3, 4-4 :: -701212744, 2130151161]{{} -> 0.0}]]
[3-4 : blue mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1793131983 : 1 : 20.0 : [*[3-4 :: >comp1 :: 3-3, 4-4 :: 1430927952, -927502170]{{} -> 0.0}]]
[3-5 : blue mod obj :- S : (lambda $0:e (and:<t*,t> (blue:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=60.0 : numParses=1 : numViterbiParses=1 : hash=-190603748 : 1 : 60.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 1435545557, 723434118]{{} -> 0.0}]]
[3-5 : blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (blue:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2)))))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=-865024656 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 1416112983, 723434118]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=50.0 : numParses=4 : numViterbiParses=2 : hash=-482610183 : 3 : 50.0 : [[3-5 :: >comp1 :: 3-3, 4-5 :: 1435545557, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1363451337, 1492610263]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 1797749588, 1264383304]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=50.0 : numParses=6 : numViterbiParses=4 : hash=-410515963 : 4 : 50.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 1797749588, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 1725655368, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1435545557, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1363451337, 1564704483]{{} -> 0.0}]]
[3-5 : blue mod obj :- N : (lambda $0:e (and:<t*,t> (blue:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=-190608553 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: 1430927952, 723434118]{{} -> 0.0}]]
[3-5 : blue mod obj :- NP : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (obj:<e,t> $0) (blue:<e,t> $0))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=-188282933 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: -629118524, 723434118]{{} -> 0.0}]]
[3-5 : blue mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (blue:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0))) : prune=50.0 : numParses=1 : numViterbiParses=1 : hash=263904864 : 1 : 50.0 : [*[3-5 :: >apply :: 3-3, 4-5 :: -5936169, 723434118]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-1136166067 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: -1547910696, 1264383304]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: -5936169, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -78030389, 1492610263]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3) (mod:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=-1064071847 : 4 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: -1620004916, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -78030389, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -1547910696, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -5936169, -495341993]{{} -> 0.0}]]
[3-5 : blue mod obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=-415133568 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 1721037763, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1430927952, -495341993]{{} -> 0.0}, [3-5 :: >comp1 :: 3-4, 5-5 :: 1793131983, 1336477524]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) ($0 $3))))))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=491283725 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 1029655576, 1264383304]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1344018763, 1492610263]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: 1416112983, -567436213]{{} -> 0.0}]]
[3-5 : blue mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (blue:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) ($0 $3) (obj:<e,t> $3))))))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=563377945 : 4 : 40.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 957561356, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1344018763, 1564704483]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1416112983, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: 1029655576, 1336477524]{{} -> 0.0}]]
[3-5 : blue mod obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=40.0 : numParses=4 : numViterbiParses=2 : hash=1747693032 : 3 : 40.0 : [*[3-5 :: >comp1 :: 3-3, 4-5 :: -701212744, 1492610263]{{} -> 0.0}, [3-5 :: >comp1 :: 3-3, 4-5 :: -629118524, -567436213]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -266914493, 1264383304]{{} -> 0.0}]]
[3-5 : blue mod obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1) (blue:<e,t> $1)))) : prune=40.0 : numParses=6 : numViterbiParses=4 : hash=1819787252 : 4 : 40.0 : [*[3-5 :: >comp1 :: 3-3, 4-5 :: -629118524, -495341993]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -266914493, 1336477524]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-4, 5-5 :: -339008713, -898443296]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: -701212744, 1564704483]{{} -> 0.0}]]
[3-5 : blue mod obj :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=-487227788 : 2 : 30.0 : [*[3-5 :: >comp1 :: 3-4, 5-5 :: 1793131983, 1264383304]{{} -> 0.0}, *[3-5 :: >comp1 :: 3-3, 4-5 :: 1430927952, -567436213]{{} -> 0.0}]]
[4-4 : mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-999596390 : 1 : 20.0 : [*[4-4 :: lex :: mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1065067691 : 1 : 20.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#1=10.000(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1132544306 : 1 : 20.0 : [*[4-4 :: lex :: mod :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#4=10.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=1137161911 : 1 : 20.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#22#10=10.000(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 20.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1945535155 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#22#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-1873440935 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#22#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-927502170 : 1 : 10.0 : [*[4-4 :: lex :: mod :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (mod:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=108206269 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#18=0.000(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=180300489 : 1 : 10.0 : [*[4-4 :: lex :: mod :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#22#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-4 : mod :- N : (lambda $0:e (mod:<e,t> $0)) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=2130151161 : 1 : 10.0 : [*[4-4 :: lex :: mod :- N : (lambda $0:e (mod:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#22#3=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#22=10.000(1.000)} -> 10.0}]]
[4-5 : mod obj :- S : (lambda $0:e (and:<t*,t> (obj:<e,t> $0) (mod:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=721113303 : 1 : 40.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: 1065067691, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- NP : (lambda $0:e (and:<t*,t> (mod:<e,t> $0) (obj:<e,t> $0))) : prune=40.0 : numParses=1 : numViterbiParses=1 : hash=723434118 : 1 : 40.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: -999596390, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (mod:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (obj:<e,t> $2))))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=-1533355423 : 1 : 30.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: -1945535155, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1) (mod:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=1 : hash=-495341993 : 2 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -999596390, -898443296]{{} -> 0.0}, [4-5 :: >comp1 :: 4-4, 5-5 :: -927502170, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) (obj:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1492610263 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1132544306, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) (obj:<e,t> $1) ($0 $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1497227868 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1137161911, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (mod:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (obj:<e,t> $2))) (pickup:<a,t> $0))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1526413893 : 1 : 30.0 : [*[4-5 :: >apply :: 4-4, 5-5 :: 108206269, -1200199578]{{} -> 0.0}]]
[4-5 : mod obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (obj:<e,t> $1)))) : prune=30.0 : numParses=1 : numViterbiParses=1 : hash=1564704483 : 1 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1132544306, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1) (obj:<e,t> $1)))) : prune=30.0 : numParses=2 : numViterbiParses=2 : hash=1569322088 : 2 : 30.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 1065067691, -898443296]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: 1137161911, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1) (mod:<e,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-567436213 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -927502170, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3))))))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-552567090 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -1873440935, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3))))))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=-480472870 : 2 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: -1945535155, -898443296]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: -1873440935, 1336477524]{{} -> 0.0}]]
[4-5 : mod obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> (obj:<e,t> $3) ($0 $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=254143950 : 1 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 180300489, 1264383304]{{} -> 0.0}]]
[4-5 : mod obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (mod:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e (and:<t*,t> ($0 $3) (obj:<e,t> $3)))) (pickup:<a,t> $1)))) : prune=20.0 : numParses=2 : numViterbiParses=2 : hash=326238170 : 2 : 20.0 : [*[4-5 :: >comp1 :: 4-4, 5-5 :: 180300489, 1336477524]{{} -> 0.0}, *[4-5 :: >comp1 :: 4-4, 5-5 :: 108206269, -898443296]{{} -> 0.0}]]
[5-5 : obj :- N : (lambda $0:e (obj:<e,t> $0)) : prune=20.0 : numParses=1 : numViterbiParses=1 : hash=-1200199578 : 1 : 20.0 : [*[5-5 :: lex :: obj :- N : (lambda $0:e (obj:<e,t> $0)){fixed_domain}]{{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 20.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-965919911 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#1=0.0(1.000),FACLEX#TMP#1=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-898443296 : 1 : 10.0 : [*[5-5 :: lex :: obj :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-893825691 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-729809831 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#5#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=-657715611 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))){fixed_domain}]{{FACLEX#LEX#5#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1264383304 : 1 : 10.0 : [*[5-5 :: lex :: obj :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (obj:<e,t> $1) ($0 $1)))){fixed_domain}]{{FACLEX#LEX#5#42=0.0(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1309591441 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1336477524 : 1 : 10.0 : [*[5-5 :: lex :: obj :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (obj:<e,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
[5-5 : obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) : prune=10.0 : numParses=1 : numViterbiParses=1 : hash=1381685661 : 1 : 10.0 : [*[5-5 :: lex :: obj :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (obj:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))){fixed_domain}]{{FACLEX#LEX#5#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#5=10.000(1.000)} -> 10.0}]]
Spans pruned: [(0, 2), (0, 3), (0, 4)]

[101.44] S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (pickup:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2))))))
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#40#7=21.435(1.000),FACLEX#TMP#7=0.000(0.100),FACLEX#XEME#40=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#14#12=21.435(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#7#51=21.435(1.000),FACLEX#TMP#51=0.000(0.100),FACLEX#XEME#7=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#35#41=21.435(1.000),FACLEX#TMP#41=0.000(0.100),FACLEX#XEME#35=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#10#8=21.435(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#25#73=21.435(1.000),FACLEX#TMP#73=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#41#60=21.435(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#41=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#43#49=21.435(1.000),FACLEX#TMP#49=0.000(0.100),FACLEX#XEME#43=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#12#22=21.435(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#6#32=21.435(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[31.435469] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#26#47=21.435(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#10#8=21.435(0.091),FACLEX#LEX#12#22=21.435(0.091),FACLEX#LEX#14#12=21.435(0.091),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#25#73=21.435(0.091),FACLEX#LEX#26#47=21.435(0.091),FACLEX#LEX#35#41=21.435(0.091),FACLEX#LEX#40#7=21.435(0.091),FACLEX#LEX#41#60=21.435(0.091),FACLEX#LEX#43#49=21.435(0.091),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#LEX#6#32=21.435(0.091),FACLEX#LEX#7#51=21.435(0.091),FACLEX#TMP#12=0.000(0.009),FACLEX#TMP#22=0.000(0.009),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#32=0.000(0.009),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#41=0.000(0.009),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#47=0.000(0.009),FACLEX#TMP#49=0.000(0.009),FACLEX#TMP#51=0.000(0.009),FACLEX#TMP#60=0.000(0.009),FACLEX#TMP#7=0.000(0.009),FACLEX#TMP#73=0.000(0.009),FACLEX#TMP#8=0.000(0.009),FACLEX#XEME#10=10.000(0.091),FACLEX#XEME#12=10.000(0.091),FACLEX#XEME#14=10.000(0.091),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#25=10.000(0.091),FACLEX#XEME#26=10.000(0.091),FACLEX#XEME#35=10.000(0.091),FACLEX#XEME#40=10.000(0.091),FACLEX#XEME#41=10.000(0.091),FACLEX#XEME#43=10.000(0.091),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#6=10.000(0.091),FACLEX#XEME#7=10.000(0.091),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:e (and:<t*,t> (self:<e,t> $0) (def:<e,t> $0) (blue:<e,t> $0) (mod:<e,t> $0) (obj:<e,t> $0)))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (self:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#14#10=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#14#10=0.0(1.000),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#10=0.000(0.100),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#14=10.000(1.000),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#self:<e,t>#obj:<e,t>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2))))))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#26#61=0.000(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#26#61=0.000(1.000),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#26=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2))))))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#21#36=0.000(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#21=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#21#36=0.000(1.000),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#36=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#21=10.000(1.000),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $0)))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#26#32=0.000(1.000),FACLEX#TMP#32=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#41#22=0.000(1.000),FACLEX#TMP#22=0.000(0.100),FACLEX#XEME#41=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#26#32=0.000(0.500),FACLEX#LEX#41#22=0.000(0.500),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#22=0.000(0.050),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#32=0.000(0.050),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#26=10.000(0.500),FACLEX#XEME#41=10.000(0.500),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#obj:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#obj:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (obj:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2)))) (pickup:<a,t> $0)))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (obj:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#21#8=0.0(1.000),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#21=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#21#8=0.0(1.000),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#8=0.000(0.100),FACLEX#XEME#21=10.000(1.000),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2))))))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#25#23=0.000(1.000),FACLEX#TMP#23=0.000(0.100),FACLEX#XEME#25=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#26#37=0.0(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#26=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#10#36=0.0(1.000),FACLEX#TMP#36=0.000(0.100),FACLEX#XEME#10=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#14#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#14=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#6#61=0.0(1.000),FACLEX#TMP#61=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#40#48=0.000(1.000),FACLEX#TMP#48=0.000(0.100),FACLEX#XEME#40=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#10#36=0.0(0.167),FACLEX#LEX#14#25=0.0(0.167),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#25#23=0.000(0.167),FACLEX#LEX#26#37=0.0(0.167),FACLEX#LEX#40#48=0.000(0.167),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#LEX#6#61=0.0(0.167),FACLEX#TMP#23=0.000(0.017),FACLEX#TMP#25=0.000(0.017),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#36=0.000(0.017),FACLEX#TMP#37=0.000(0.017),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#48=0.000(0.017),FACLEX#TMP#61=0.000(0.017),FACLEX#XEME#10=10.000(0.167),FACLEX#XEME#14=10.000(0.167),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#25=10.000(0.167),FACLEX#XEME#26=10.000(0.167),FACLEX#XEME#40=10.000(0.167),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#6=10.000(0.167),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (throw:<a,t> $0) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2) (blue:<e,t> $2))))))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (throw:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#6#37=0.000(1.000),FACLEX#TMP#37=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#LEX#6#37=0.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#37=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#6=10.000(1.000),LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)}
[80.00] S : (lambda $0:a (and:<t*,t> (actor:<a,<<e,t>,t>> $0 (lambda $1:e (self:<e,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (and:<t*,t> (def:<e,t> $2) (blue:<e,t> $2) (mod:<e,t> $2) (obj:<e,t> $2)))) (pickup:<a,t> $0)))
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#12#60=0.0(1.000),FACLEX#TMP#60=0.000(0.100),FACLEX#XEME#12=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (pickup:<a,t> $1) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#36#66=0.0(1.000),FACLEX#TMP#66=0.000(0.100),FACLEX#XEME#36=10.000(1.000)}]
	[10.000000] pick up :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (self:<e,t> $2))) (actor:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#6#47=0.0(1.000),FACLEX#TMP#47=0.000(0.100),FACLEX#XEME#6=10.000(1.000)}]
	[20.000000] the :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (def:<e,t> $1)))) [{FACLEX#LEX#24#40=10.000(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#12#60=0.0(0.333),FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#40=10.000(1.000),FACLEX#LEX#36#66=0.0(0.333),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#40=0.0(1.000),FACLEX#LEX#6#47=0.0(0.333),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#40=0.000(0.200),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#47=0.000(0.033),FACLEX#TMP#60=0.000(0.033),FACLEX#TMP#66=0.000(0.033),FACLEX#XEME#12=10.000(0.333),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#36=10.000(0.333),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#6=10.000(0.333),LOGEXP#CPAP#and:<t*,t>#actor:<a,<<e,t>,t>>#0=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#actor:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#def:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#def:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000)}
[70.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (pickup:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $0) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (blue:<e,t> $3))))))
	[10.000000] pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#7=10.000(1.000)}]
	[10.000000] the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#24#25=0.0(1.000),FACLEX#TMP#25=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (throw:<a,t> $1) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3)))))) [{FACLEX#LEX#24#21=0.0(1.000),FACLEX#TMP#21=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#54#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#21=0.0(0.500),FACLEX#LEX#24#25=0.0(0.500),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#4=0.000(0.500),FACLEX#LEX#54#40=0.0(0.500),FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#21=0.000(0.050),FACLEX#TMP#25=0.000(0.050),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#4=0.000(0.050),FACLEX#TMP#40=0.000(0.050),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#7=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#throw:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
[70.00] S : (lambda $0:a (and:<t*,t> (manner:<a,<<a,t>,t>> $0 (lambda $1:a (pickup:<a,t> $1))) (actor:<a,<<e,t>,t>> $0 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $0 (lambda $3:e (and:<t*,t> (mod:<e,t> $3) (obj:<e,t> $3) (blue:<e,t> $3)))) (pickup:<a,t> $0)))
	[10.000000] pick up :- S/S : (lambda $0:<a,t> (lambda $1:a (and:<t*,t> (manner:<a,<<a,t>,t>> $1 (lambda $2:a (pickup:<a,t> $2))) ($0 $1)))) [{FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#7=10.000(1.000)}]
	[10.000000] the :- S/N : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#24#18=0.0(1.000),FACLEX#TMP#18=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- N/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#54#4=0.000(1.000),FACLEX#TMP#4=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	[20.000000] mod :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (mod:<e,t> $1) ($0 $1)))) [{FACLEX#LEX#22#42=10.000(1.000),FACLEX#TMP#42=0.000(0.100),FACLEX#XEME#22=10.000(1.000)}]
	[20.000000] obj :- N : (lambda $0:e (obj:<e,t> $0)) [{FACLEX#LEX#5#3=10.000(1.000),FACLEX#TMP#3=0.000(0.100),FACLEX#XEME#5=10.000(1.000)}]
	[10.000000] the :- S/NP : (lambda $0:<e,t> (lambda $1:a (and:<t*,t> (actor:<a,<<e,t>,t>> $1 (lambda $2:e (def:<e,t> $2))) (obj:<a,<<e,t>,t>> $1 (lambda $3:e ($0 $3))) (pickup:<a,t> $1)))) [{FACLEX#LEX#24#12=0.0(1.000),FACLEX#TMP#12=0.000(0.100),FACLEX#XEME#24=10.000(1.000)}]
	[10.000000] blue :- NP/NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (blue:<e,t> $1)))) [{FACLEX#LEX#54#40=0.0(1.000),FACLEX#TMP#40=0.000(0.100),FACLEX#XEME#54=10.000(1.000)}]
	Rules: lex[0-1], lex[2-2], lex[3-3], lex[4-4], lex[5-5], >apply[4-4, 5-5], >apply[3-3, 4-5], >apply[2-2, 3-5], >apply[0-1, 2-5]
	Features: {FACLEX#LEX#22#42=10.000(1.000),FACLEX#LEX#24#12=0.0(0.500),FACLEX#LEX#24#18=0.0(0.500),FACLEX#LEX#5#3=10.000(1.000),FACLEX#LEX#54#4=0.000(0.500),FACLEX#LEX#54#40=0.0(0.500),FACLEX#LEX#7#58=0.0(1.000),FACLEX#TMP#12=0.000(0.050),FACLEX#TMP#18=0.000(0.050),FACLEX#TMP#3=0.000(0.100),FACLEX#TMP#4=0.000(0.050),FACLEX#TMP#40=0.000(0.050),FACLEX#TMP#42=0.000(0.100),FACLEX#TMP#58=0.000(0.100),FACLEX#XEME#22=10.000(1.000),FACLEX#XEME#24=10.000(1.000),FACLEX#XEME#5=10.000(1.000),FACLEX#XEME#54=10.000(1.000),FACLEX#XEME#7=10.000(1.000),LOGEXP#CPP1#and:<t*,t>#manner:<a,<<a,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#mod:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<a,<<e,t>,t>>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#blue:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#obj:<e,t>#mod:<e,t>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#actor:<a,<<e,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#manner:<a,<<a,t>,t>>=0.0(1.000),LOGEXP#CPP1#and:<t*,t>#pickup:<a,t>#obj:<a,<<e,t>,t>>=0.0(1.000)}
