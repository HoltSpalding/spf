(

// Common predicates
exists:<<e,t>,t>				// Existensial quantifier
exists:<<a,t>,t>
eq:<e,<e,t>>
eq:<a,<a,t>>
not:<t,t>

argmax:<<e,t>,<<e,n>,e>>		// Returns the entity from arg0 that has the maximum value according to the function arg1
argmin:<<e,t>,<<e,n>,e>>		// Returns the entity from arg0 that has the minimum value according to the function arg1

// Determiners
a:<<e,t>,e>			// Indefinite article
io:<<e,t>,e>        // Definite article, indirect object
def:<e,t>
mod:<e,t>

pickup:<a,t>
throw:<a,t>
actor:<e,t>
actor:<a,<<e,t>,t>>
manner:<a,<<a,t>,t>>
obj:<a,<<e,t>,t>>
before:<a,t> //relational predicate betwee two actions, assumed outside of the parser
                //should before be an a, or a relation. we must know if action is a nounphrase or not
                //we could have r = relations, s = stative, maybe change this later
conjsubj:<a,<<a,t>,t>> //conjunction subject
conjobj:<a,<<a,t>,t>>  //conjuction object

modifyaction:<a,<a,t>>
modifyaction:<<a,t>,<a,t>>
prepsubj:<a,<<a,t>,t>>
prepobj:<a,<<e,t>,t>>
by:<a,t>
)